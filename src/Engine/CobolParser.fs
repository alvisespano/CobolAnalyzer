// Implementation file for parser generated by fsyacc
module CobolAnalyzer.Engine.CobolParser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 2 "CobolParser.fsy"


#light "on"

open System
open Absyn
open Absyn.Cobol
open ParseTrans

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContext ctx))


# 19 "CobolParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | OCCURS
  | VALUE
  | THRU
  | COMP
  | COMP1
  | COMP2
  | COMP3
  | PACKED_DECIMAL
  | BINARY
  | REDEFINES
  | USAGE
  | PERIOD
  | COMMA
  | DOT
  | PIC_A
  | PIC_X
  | PIC_9
  | PIC_Z
  | PIC_0
  | PIC_V
  | PIC_S
  | PIC_DOT
  | PIC_COMMA
  | ZEROS
  | SPACES
  | DIVISION
  | SECTION
  | IDENTIFICATION
  | PROGRAM_ID
  | ENVIRONMENT
  | CONFIGURATION
  | WORKING_STORAGE
  | DATA
  | SPECIAL_NAMES
  | DECIMAL_POINT
  | COMMA_KEYWORD
  | NAME
  | NAMES
  | IS
  | INPUT_OUTPUT
  | MEMBER
  | FILE_CONTROL
  | FILE
  | SELECT
  | OPTIONAL
  | ASSIGN
  | STATUS
  | RESERVE
  | AREAS
  | BUFFER
  | SIZE
  | BLOCK
  | BLOCKS
  | ORGANIZATION
  | RELATIVE
  | SEQUENTIAL
  | RANDOM
  | DYNAMIC
  | KEY
  | ACCESS
  | MODE
  | FD
  | GLOBAL
  | EXTERNAL
  | CONTAINS
  | RECORD
  | RECORDS
  | CHARACTERS
  | COMPRESSED
  | LABEL
  | STANDARD
  | OMITTED
  | ARE
  | COPY
  | OF
  | IN
  | ON
  | SUPPRESS
  | REPLACING
  | BY
  | TO
  | RECORDING
  | PROCEDURE_DIVISION_BEGINS
  | PIC_NUM of (int)
  | FLOAT of (float)
  | UINT64 of (uint64)
  | INT64 of (int64)
  | ID of (Absyn.id)
  | STRING of (string)
  | PIC of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_OCCURS
    | TOKEN_VALUE
    | TOKEN_THRU
    | TOKEN_COMP
    | TOKEN_COMP1
    | TOKEN_COMP2
    | TOKEN_COMP3
    | TOKEN_PACKED_DECIMAL
    | TOKEN_BINARY
    | TOKEN_REDEFINES
    | TOKEN_USAGE
    | TOKEN_PERIOD
    | TOKEN_COMMA
    | TOKEN_DOT
    | TOKEN_PIC_A
    | TOKEN_PIC_X
    | TOKEN_PIC_9
    | TOKEN_PIC_Z
    | TOKEN_PIC_0
    | TOKEN_PIC_V
    | TOKEN_PIC_S
    | TOKEN_PIC_DOT
    | TOKEN_PIC_COMMA
    | TOKEN_ZEROS
    | TOKEN_SPACES
    | TOKEN_DIVISION
    | TOKEN_SECTION
    | TOKEN_IDENTIFICATION
    | TOKEN_PROGRAM_ID
    | TOKEN_ENVIRONMENT
    | TOKEN_CONFIGURATION
    | TOKEN_WORKING_STORAGE
    | TOKEN_DATA
    | TOKEN_SPECIAL_NAMES
    | TOKEN_DECIMAL_POINT
    | TOKEN_COMMA_KEYWORD
    | TOKEN_NAME
    | TOKEN_NAMES
    | TOKEN_IS
    | TOKEN_INPUT_OUTPUT
    | TOKEN_MEMBER
    | TOKEN_FILE_CONTROL
    | TOKEN_FILE
    | TOKEN_SELECT
    | TOKEN_OPTIONAL
    | TOKEN_ASSIGN
    | TOKEN_STATUS
    | TOKEN_RESERVE
    | TOKEN_AREAS
    | TOKEN_BUFFER
    | TOKEN_SIZE
    | TOKEN_BLOCK
    | TOKEN_BLOCKS
    | TOKEN_ORGANIZATION
    | TOKEN_RELATIVE
    | TOKEN_SEQUENTIAL
    | TOKEN_RANDOM
    | TOKEN_DYNAMIC
    | TOKEN_KEY
    | TOKEN_ACCESS
    | TOKEN_MODE
    | TOKEN_FD
    | TOKEN_GLOBAL
    | TOKEN_EXTERNAL
    | TOKEN_CONTAINS
    | TOKEN_RECORD
    | TOKEN_RECORDS
    | TOKEN_CHARACTERS
    | TOKEN_COMPRESSED
    | TOKEN_LABEL
    | TOKEN_STANDARD
    | TOKEN_OMITTED
    | TOKEN_ARE
    | TOKEN_COPY
    | TOKEN_OF
    | TOKEN_IN
    | TOKEN_ON
    | TOKEN_SUPPRESS
    | TOKEN_REPLACING
    | TOKEN_BY
    | TOKEN_TO
    | TOKEN_RECORDING
    | TOKEN_PROCEDURE_DIVISION_BEGINS
    | TOKEN_PIC_NUM
    | TOKEN_FLOAT
    | TOKEN_UINT64
    | TOKEN_INT64
    | TOKEN_ID
    | TOKEN_STRING
    | TOKEN_PIC
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startdatadiv_format
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_program1
    | NONTERM_iddiv
    | NONTERM_member_name
    | NONTERM_iddiv_body
    | NONTERM_envdiv
    | NONTERM_envdiv_title
    | NONTERM_envdiv_conf
    | NONTERM_envdiv_conf_title
    | NONTERM_envdiv_conf_body
    | NONTERM_envdiv_conf_options
    | NONTERM_envdiv_conf_option
    | NONTERM_special_names
    | NONTERM_special_names_body
    | NONTERM_special_name
    | NONTERM_input_output
    | NONTERM_input_output_title
    | NONTERM_input_output_body
    | NONTERM_file_ctrl
    | NONTERM_file_ctrl_title
    | NONTERM_file_ctrl_body
    | NONTERM_file_ctrl_sel
    | NONTERM_file_ctrl_sel_body
    | NONTERM_file_ctrl_options
    | NONTERM_file_ctrl_option
    | NONTERM_organization_mode
    | NONTERM_mode
    | NONTERM_datadiv
    | NONTERM_datadiv_body
    | NONTERM_file_section
    | NONTERM_files
    | NONTERM_file
    | NONTERM_file_options
    | NONTERM_file_option
    | NONTERM_n_items
    | NONTERM_fileo_items
    | NONTERM_recs
    | NONTERM_storage_section
    | NONTERM_storage_body
    | NONTERM_storage_body_item
    | NONTERM_datadiv_line
    | NONTERM_udatadiv_line
    | NONTERM_datadiv_line_def
    | NONTERM_datadiv_pic_usage
    | NONTERM_datadiv_pic_simple
    | NONTERM_datadiv_pic_qualified
    | NONTERM_datadiv_pic_qualifier
    | NONTERM_datadiv_occurs_value_usage
    | NONTERM_datadiv_usage
    | NONTERM_datadiv_occurs_val
    | NONTERM_datadiv_value
    | NONTERM_datadiv_seq
    | NONTERM_datadiv_thru
    | NONTERM_datadiv_thrus
    | NONTERM_lit
    | NONTERM_copy_stmt
    | NONTERM_replace
    | NONTERM_copy_target
    | NONTERM_prep
    | NONTERM_prep2
    | NONTERM_datadiv_format
    | NONTERM_alphafmt
    | NONTERM_alphafmt_item
    | NONTERM_alphafmt_char
    | NONTERM_numfmt
    | NONTERM_numfmt'
    | NONTERM_numfmt_part
    | NONTERM_numfmt_item
    | NONTERM_numfmt_sep
    | NONTERM_numfmt_char

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | OCCURS  -> 1 
  | VALUE  -> 2 
  | THRU  -> 3 
  | COMP  -> 4 
  | COMP1  -> 5 
  | COMP2  -> 6 
  | COMP3  -> 7 
  | PACKED_DECIMAL  -> 8 
  | BINARY  -> 9 
  | REDEFINES  -> 10 
  | USAGE  -> 11 
  | PERIOD  -> 12 
  | COMMA  -> 13 
  | DOT  -> 14 
  | PIC_A  -> 15 
  | PIC_X  -> 16 
  | PIC_9  -> 17 
  | PIC_Z  -> 18 
  | PIC_0  -> 19 
  | PIC_V  -> 20 
  | PIC_S  -> 21 
  | PIC_DOT  -> 22 
  | PIC_COMMA  -> 23 
  | ZEROS  -> 24 
  | SPACES  -> 25 
  | DIVISION  -> 26 
  | SECTION  -> 27 
  | IDENTIFICATION  -> 28 
  | PROGRAM_ID  -> 29 
  | ENVIRONMENT  -> 30 
  | CONFIGURATION  -> 31 
  | WORKING_STORAGE  -> 32 
  | DATA  -> 33 
  | SPECIAL_NAMES  -> 34 
  | DECIMAL_POINT  -> 35 
  | COMMA_KEYWORD  -> 36 
  | NAME  -> 37 
  | NAMES  -> 38 
  | IS  -> 39 
  | INPUT_OUTPUT  -> 40 
  | MEMBER  -> 41 
  | FILE_CONTROL  -> 42 
  | FILE  -> 43 
  | SELECT  -> 44 
  | OPTIONAL  -> 45 
  | ASSIGN  -> 46 
  | STATUS  -> 47 
  | RESERVE  -> 48 
  | AREAS  -> 49 
  | BUFFER  -> 50 
  | SIZE  -> 51 
  | BLOCK  -> 52 
  | BLOCKS  -> 53 
  | ORGANIZATION  -> 54 
  | RELATIVE  -> 55 
  | SEQUENTIAL  -> 56 
  | RANDOM  -> 57 
  | DYNAMIC  -> 58 
  | KEY  -> 59 
  | ACCESS  -> 60 
  | MODE  -> 61 
  | FD  -> 62 
  | GLOBAL  -> 63 
  | EXTERNAL  -> 64 
  | CONTAINS  -> 65 
  | RECORD  -> 66 
  | RECORDS  -> 67 
  | CHARACTERS  -> 68 
  | COMPRESSED  -> 69 
  | LABEL  -> 70 
  | STANDARD  -> 71 
  | OMITTED  -> 72 
  | ARE  -> 73 
  | COPY  -> 74 
  | OF  -> 75 
  | IN  -> 76 
  | ON  -> 77 
  | SUPPRESS  -> 78 
  | REPLACING  -> 79 
  | BY  -> 80 
  | TO  -> 81 
  | RECORDING  -> 82 
  | PROCEDURE_DIVISION_BEGINS  -> 83 
  | PIC_NUM _ -> 84 
  | FLOAT _ -> 85 
  | UINT64 _ -> 86 
  | INT64 _ -> 87 
  | ID _ -> 88 
  | STRING _ -> 89 
  | PIC _ -> 90 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_OCCURS 
  | 2 -> TOKEN_VALUE 
  | 3 -> TOKEN_THRU 
  | 4 -> TOKEN_COMP 
  | 5 -> TOKEN_COMP1 
  | 6 -> TOKEN_COMP2 
  | 7 -> TOKEN_COMP3 
  | 8 -> TOKEN_PACKED_DECIMAL 
  | 9 -> TOKEN_BINARY 
  | 10 -> TOKEN_REDEFINES 
  | 11 -> TOKEN_USAGE 
  | 12 -> TOKEN_PERIOD 
  | 13 -> TOKEN_COMMA 
  | 14 -> TOKEN_DOT 
  | 15 -> TOKEN_PIC_A 
  | 16 -> TOKEN_PIC_X 
  | 17 -> TOKEN_PIC_9 
  | 18 -> TOKEN_PIC_Z 
  | 19 -> TOKEN_PIC_0 
  | 20 -> TOKEN_PIC_V 
  | 21 -> TOKEN_PIC_S 
  | 22 -> TOKEN_PIC_DOT 
  | 23 -> TOKEN_PIC_COMMA 
  | 24 -> TOKEN_ZEROS 
  | 25 -> TOKEN_SPACES 
  | 26 -> TOKEN_DIVISION 
  | 27 -> TOKEN_SECTION 
  | 28 -> TOKEN_IDENTIFICATION 
  | 29 -> TOKEN_PROGRAM_ID 
  | 30 -> TOKEN_ENVIRONMENT 
  | 31 -> TOKEN_CONFIGURATION 
  | 32 -> TOKEN_WORKING_STORAGE 
  | 33 -> TOKEN_DATA 
  | 34 -> TOKEN_SPECIAL_NAMES 
  | 35 -> TOKEN_DECIMAL_POINT 
  | 36 -> TOKEN_COMMA_KEYWORD 
  | 37 -> TOKEN_NAME 
  | 38 -> TOKEN_NAMES 
  | 39 -> TOKEN_IS 
  | 40 -> TOKEN_INPUT_OUTPUT 
  | 41 -> TOKEN_MEMBER 
  | 42 -> TOKEN_FILE_CONTROL 
  | 43 -> TOKEN_FILE 
  | 44 -> TOKEN_SELECT 
  | 45 -> TOKEN_OPTIONAL 
  | 46 -> TOKEN_ASSIGN 
  | 47 -> TOKEN_STATUS 
  | 48 -> TOKEN_RESERVE 
  | 49 -> TOKEN_AREAS 
  | 50 -> TOKEN_BUFFER 
  | 51 -> TOKEN_SIZE 
  | 52 -> TOKEN_BLOCK 
  | 53 -> TOKEN_BLOCKS 
  | 54 -> TOKEN_ORGANIZATION 
  | 55 -> TOKEN_RELATIVE 
  | 56 -> TOKEN_SEQUENTIAL 
  | 57 -> TOKEN_RANDOM 
  | 58 -> TOKEN_DYNAMIC 
  | 59 -> TOKEN_KEY 
  | 60 -> TOKEN_ACCESS 
  | 61 -> TOKEN_MODE 
  | 62 -> TOKEN_FD 
  | 63 -> TOKEN_GLOBAL 
  | 64 -> TOKEN_EXTERNAL 
  | 65 -> TOKEN_CONTAINS 
  | 66 -> TOKEN_RECORD 
  | 67 -> TOKEN_RECORDS 
  | 68 -> TOKEN_CHARACTERS 
  | 69 -> TOKEN_COMPRESSED 
  | 70 -> TOKEN_LABEL 
  | 71 -> TOKEN_STANDARD 
  | 72 -> TOKEN_OMITTED 
  | 73 -> TOKEN_ARE 
  | 74 -> TOKEN_COPY 
  | 75 -> TOKEN_OF 
  | 76 -> TOKEN_IN 
  | 77 -> TOKEN_ON 
  | 78 -> TOKEN_SUPPRESS 
  | 79 -> TOKEN_REPLACING 
  | 80 -> TOKEN_BY 
  | 81 -> TOKEN_TO 
  | 82 -> TOKEN_RECORDING 
  | 83 -> TOKEN_PROCEDURE_DIVISION_BEGINS 
  | 84 -> TOKEN_PIC_NUM 
  | 85 -> TOKEN_FLOAT 
  | 86 -> TOKEN_UINT64 
  | 87 -> TOKEN_INT64 
  | 88 -> TOKEN_ID 
  | 89 -> TOKEN_STRING 
  | 90 -> TOKEN_PIC 
  | 93 -> TOKEN_end_of_input
  | 91 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startdatadiv_format 
    | 1 -> NONTERM__startprogram 
    | 2 -> NONTERM_program 
    | 3 -> NONTERM_program1 
    | 4 -> NONTERM_iddiv 
    | 5 -> NONTERM_iddiv 
    | 6 -> NONTERM_member_name 
    | 7 -> NONTERM_iddiv_body 
    | 8 -> NONTERM_envdiv 
    | 9 -> NONTERM_envdiv 
    | 10 -> NONTERM_envdiv_title 
    | 11 -> NONTERM_envdiv_conf 
    | 12 -> NONTERM_envdiv_conf 
    | 13 -> NONTERM_envdiv_conf_title 
    | 14 -> NONTERM_envdiv_conf_body 
    | 15 -> NONTERM_envdiv_conf_options 
    | 16 -> NONTERM_envdiv_conf_options 
    | 17 -> NONTERM_envdiv_conf_option 
    | 18 -> NONTERM_envdiv_conf_option 
    | 19 -> NONTERM_special_names 
    | 20 -> NONTERM_special_names_body 
    | 21 -> NONTERM_special_names_body 
    | 22 -> NONTERM_special_name 
    | 23 -> NONTERM_special_name 
    | 24 -> NONTERM_input_output 
    | 25 -> NONTERM_input_output 
    | 26 -> NONTERM_input_output_title 
    | 27 -> NONTERM_input_output_body 
    | 28 -> NONTERM_file_ctrl 
    | 29 -> NONTERM_file_ctrl 
    | 30 -> NONTERM_file_ctrl_title 
    | 31 -> NONTERM_file_ctrl_body 
    | 32 -> NONTERM_file_ctrl_sel 
    | 33 -> NONTERM_file_ctrl_sel 
    | 34 -> NONTERM_file_ctrl_sel_body 
    | 35 -> NONTERM_file_ctrl_sel_body 
    | 36 -> NONTERM_file_ctrl_options 
    | 37 -> NONTERM_file_ctrl_options 
    | 38 -> NONTERM_file_ctrl_option 
    | 39 -> NONTERM_file_ctrl_option 
    | 40 -> NONTERM_file_ctrl_option 
    | 41 -> NONTERM_file_ctrl_option 
    | 42 -> NONTERM_file_ctrl_option 
    | 43 -> NONTERM_organization_mode 
    | 44 -> NONTERM_organization_mode 
    | 45 -> NONTERM_mode 
    | 46 -> NONTERM_mode 
    | 47 -> NONTERM_mode 
    | 48 -> NONTERM_datadiv 
    | 49 -> NONTERM_datadiv_body 
    | 50 -> NONTERM_datadiv_body 
    | 51 -> NONTERM_file_section 
    | 52 -> NONTERM_file_section 
    | 53 -> NONTERM_files 
    | 54 -> NONTERM_files 
    | 55 -> NONTERM_file 
    | 56 -> NONTERM_file 
    | 57 -> NONTERM_file_options 
    | 58 -> NONTERM_file_options 
    | 59 -> NONTERM_file_option 
    | 60 -> NONTERM_file_option 
    | 61 -> NONTERM_file_option 
    | 62 -> NONTERM_file_option 
    | 63 -> NONTERM_file_option 
    | 64 -> NONTERM_file_option 
    | 65 -> NONTERM_file_option 
    | 66 -> NONTERM_file_option 
    | 67 -> NONTERM_file_option 
    | 68 -> NONTERM_file_option 
    | 69 -> NONTERM_n_items 
    | 70 -> NONTERM_n_items 
    | 71 -> NONTERM_fileo_items 
    | 72 -> NONTERM_fileo_items 
    | 73 -> NONTERM_recs 
    | 74 -> NONTERM_recs 
    | 75 -> NONTERM_storage_section 
    | 76 -> NONTERM_storage_body 
    | 77 -> NONTERM_storage_body 
    | 78 -> NONTERM_storage_body_item 
    | 79 -> NONTERM_storage_body_item 
    | 80 -> NONTERM_datadiv_line 
    | 81 -> NONTERM_udatadiv_line 
    | 82 -> NONTERM_udatadiv_line 
    | 83 -> NONTERM_udatadiv_line 
    | 84 -> NONTERM_udatadiv_line 
    | 85 -> NONTERM_udatadiv_line 
    | 86 -> NONTERM_udatadiv_line 
    | 87 -> NONTERM_datadiv_line_def 
    | 88 -> NONTERM_datadiv_line_def 
    | 89 -> NONTERM_datadiv_pic_usage 
    | 90 -> NONTERM_datadiv_pic_usage 
    | 91 -> NONTERM_datadiv_pic_usage 
    | 92 -> NONTERM_datadiv_pic_simple 
    | 93 -> NONTERM_datadiv_pic_qualified 
    | 94 -> NONTERM_datadiv_pic_qualifier 
    | 95 -> NONTERM_datadiv_pic_qualifier 
    | 96 -> NONTERM_datadiv_pic_qualifier 
    | 97 -> NONTERM_datadiv_pic_qualifier 
    | 98 -> NONTERM_datadiv_pic_qualifier 
    | 99 -> NONTERM_datadiv_pic_qualifier 
    | 100 -> NONTERM_datadiv_occurs_value_usage 
    | 101 -> NONTERM_datadiv_occurs_value_usage 
    | 102 -> NONTERM_datadiv_usage 
    | 103 -> NONTERM_datadiv_usage 
    | 104 -> NONTERM_datadiv_occurs_val 
    | 105 -> NONTERM_datadiv_occurs_val 
    | 106 -> NONTERM_datadiv_occurs_val 
    | 107 -> NONTERM_datadiv_occurs_val 
    | 108 -> NONTERM_datadiv_value 
    | 109 -> NONTERM_datadiv_value 
    | 110 -> NONTERM_datadiv_seq 
    | 111 -> NONTERM_datadiv_seq 
    | 112 -> NONTERM_datadiv_seq 
    | 113 -> NONTERM_datadiv_seq 
    | 114 -> NONTERM_datadiv_seq 
    | 115 -> NONTERM_datadiv_thru 
    | 116 -> NONTERM_datadiv_thrus 
    | 117 -> NONTERM_datadiv_thrus 
    | 118 -> NONTERM_lit 
    | 119 -> NONTERM_lit 
    | 120 -> NONTERM_lit 
    | 121 -> NONTERM_lit 
    | 122 -> NONTERM_copy_stmt 
    | 123 -> NONTERM_copy_stmt 
    | 124 -> NONTERM_copy_stmt 
    | 125 -> NONTERM_copy_stmt 
    | 126 -> NONTERM_copy_stmt 
    | 127 -> NONTERM_replace 
    | 128 -> NONTERM_copy_target 
    | 129 -> NONTERM_prep 
    | 130 -> NONTERM_prep 
    | 131 -> NONTERM_prep2 
    | 132 -> NONTERM_prep2 
    | 133 -> NONTERM_datadiv_format 
    | 134 -> NONTERM_datadiv_format 
    | 135 -> NONTERM_alphafmt 
    | 136 -> NONTERM_alphafmt 
    | 137 -> NONTERM_alphafmt_item 
    | 138 -> NONTERM_alphafmt_item 
    | 139 -> NONTERM_alphafmt_char 
    | 140 -> NONTERM_alphafmt_char 
    | 141 -> NONTERM_numfmt 
    | 142 -> NONTERM_numfmt 
    | 143 -> NONTERM_numfmt' 
    | 144 -> NONTERM_numfmt' 
    | 145 -> NONTERM_numfmt_part 
    | 146 -> NONTERM_numfmt_part 
    | 147 -> NONTERM_numfmt_part 
    | 148 -> NONTERM_numfmt_item 
    | 149 -> NONTERM_numfmt_item 
    | 150 -> NONTERM_numfmt_sep 
    | 151 -> NONTERM_numfmt_sep 
    | 152 -> NONTERM_numfmt_char 
    | 153 -> NONTERM_numfmt_char 
    | 154 -> NONTERM_numfmt_char 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 93 
let _fsyacc_tagOfErrorTerminal = 91

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | OCCURS  -> "OCCURS" 
  | VALUE  -> "VALUE" 
  | THRU  -> "THRU" 
  | COMP  -> "COMP" 
  | COMP1  -> "COMP1" 
  | COMP2  -> "COMP2" 
  | COMP3  -> "COMP3" 
  | PACKED_DECIMAL  -> "PACKED_DECIMAL" 
  | BINARY  -> "BINARY" 
  | REDEFINES  -> "REDEFINES" 
  | USAGE  -> "USAGE" 
  | PERIOD  -> "PERIOD" 
  | COMMA  -> "COMMA" 
  | DOT  -> "DOT" 
  | PIC_A  -> "PIC_A" 
  | PIC_X  -> "PIC_X" 
  | PIC_9  -> "PIC_9" 
  | PIC_Z  -> "PIC_Z" 
  | PIC_0  -> "PIC_0" 
  | PIC_V  -> "PIC_V" 
  | PIC_S  -> "PIC_S" 
  | PIC_DOT  -> "PIC_DOT" 
  | PIC_COMMA  -> "PIC_COMMA" 
  | ZEROS  -> "ZEROS" 
  | SPACES  -> "SPACES" 
  | DIVISION  -> "DIVISION" 
  | SECTION  -> "SECTION" 
  | IDENTIFICATION  -> "IDENTIFICATION" 
  | PROGRAM_ID  -> "PROGRAM_ID" 
  | ENVIRONMENT  -> "ENVIRONMENT" 
  | CONFIGURATION  -> "CONFIGURATION" 
  | WORKING_STORAGE  -> "WORKING_STORAGE" 
  | DATA  -> "DATA" 
  | SPECIAL_NAMES  -> "SPECIAL_NAMES" 
  | DECIMAL_POINT  -> "DECIMAL_POINT" 
  | COMMA_KEYWORD  -> "COMMA_KEYWORD" 
  | NAME  -> "NAME" 
  | NAMES  -> "NAMES" 
  | IS  -> "IS" 
  | INPUT_OUTPUT  -> "INPUT_OUTPUT" 
  | MEMBER  -> "MEMBER" 
  | FILE_CONTROL  -> "FILE_CONTROL" 
  | FILE  -> "FILE" 
  | SELECT  -> "SELECT" 
  | OPTIONAL  -> "OPTIONAL" 
  | ASSIGN  -> "ASSIGN" 
  | STATUS  -> "STATUS" 
  | RESERVE  -> "RESERVE" 
  | AREAS  -> "AREAS" 
  | BUFFER  -> "BUFFER" 
  | SIZE  -> "SIZE" 
  | BLOCK  -> "BLOCK" 
  | BLOCKS  -> "BLOCKS" 
  | ORGANIZATION  -> "ORGANIZATION" 
  | RELATIVE  -> "RELATIVE" 
  | SEQUENTIAL  -> "SEQUENTIAL" 
  | RANDOM  -> "RANDOM" 
  | DYNAMIC  -> "DYNAMIC" 
  | KEY  -> "KEY" 
  | ACCESS  -> "ACCESS" 
  | MODE  -> "MODE" 
  | FD  -> "FD" 
  | GLOBAL  -> "GLOBAL" 
  | EXTERNAL  -> "EXTERNAL" 
  | CONTAINS  -> "CONTAINS" 
  | RECORD  -> "RECORD" 
  | RECORDS  -> "RECORDS" 
  | CHARACTERS  -> "CHARACTERS" 
  | COMPRESSED  -> "COMPRESSED" 
  | LABEL  -> "LABEL" 
  | STANDARD  -> "STANDARD" 
  | OMITTED  -> "OMITTED" 
  | ARE  -> "ARE" 
  | COPY  -> "COPY" 
  | OF  -> "OF" 
  | IN  -> "IN" 
  | ON  -> "ON" 
  | SUPPRESS  -> "SUPPRESS" 
  | REPLACING  -> "REPLACING" 
  | BY  -> "BY" 
  | TO  -> "TO" 
  | RECORDING  -> "RECORDING" 
  | PROCEDURE_DIVISION_BEGINS  -> "PROCEDURE_DIVISION_BEGINS" 
  | PIC_NUM _ -> "PIC_NUM" 
  | FLOAT _ -> "FLOAT" 
  | UINT64 _ -> "UINT64" 
  | INT64 _ -> "INT64" 
  | ID _ -> "ID" 
  | STRING _ -> "STRING" 
  | PIC _ -> "PIC" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | OCCURS  -> (null : System.Object) 
  | VALUE  -> (null : System.Object) 
  | THRU  -> (null : System.Object) 
  | COMP  -> (null : System.Object) 
  | COMP1  -> (null : System.Object) 
  | COMP2  -> (null : System.Object) 
  | COMP3  -> (null : System.Object) 
  | PACKED_DECIMAL  -> (null : System.Object) 
  | BINARY  -> (null : System.Object) 
  | REDEFINES  -> (null : System.Object) 
  | USAGE  -> (null : System.Object) 
  | PERIOD  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PIC_A  -> (null : System.Object) 
  | PIC_X  -> (null : System.Object) 
  | PIC_9  -> (null : System.Object) 
  | PIC_Z  -> (null : System.Object) 
  | PIC_0  -> (null : System.Object) 
  | PIC_V  -> (null : System.Object) 
  | PIC_S  -> (null : System.Object) 
  | PIC_DOT  -> (null : System.Object) 
  | PIC_COMMA  -> (null : System.Object) 
  | ZEROS  -> (null : System.Object) 
  | SPACES  -> (null : System.Object) 
  | DIVISION  -> (null : System.Object) 
  | SECTION  -> (null : System.Object) 
  | IDENTIFICATION  -> (null : System.Object) 
  | PROGRAM_ID  -> (null : System.Object) 
  | ENVIRONMENT  -> (null : System.Object) 
  | CONFIGURATION  -> (null : System.Object) 
  | WORKING_STORAGE  -> (null : System.Object) 
  | DATA  -> (null : System.Object) 
  | SPECIAL_NAMES  -> (null : System.Object) 
  | DECIMAL_POINT  -> (null : System.Object) 
  | COMMA_KEYWORD  -> (null : System.Object) 
  | NAME  -> (null : System.Object) 
  | NAMES  -> (null : System.Object) 
  | IS  -> (null : System.Object) 
  | INPUT_OUTPUT  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | FILE_CONTROL  -> (null : System.Object) 
  | FILE  -> (null : System.Object) 
  | SELECT  -> (null : System.Object) 
  | OPTIONAL  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | STATUS  -> (null : System.Object) 
  | RESERVE  -> (null : System.Object) 
  | AREAS  -> (null : System.Object) 
  | BUFFER  -> (null : System.Object) 
  | SIZE  -> (null : System.Object) 
  | BLOCK  -> (null : System.Object) 
  | BLOCKS  -> (null : System.Object) 
  | ORGANIZATION  -> (null : System.Object) 
  | RELATIVE  -> (null : System.Object) 
  | SEQUENTIAL  -> (null : System.Object) 
  | RANDOM  -> (null : System.Object) 
  | DYNAMIC  -> (null : System.Object) 
  | KEY  -> (null : System.Object) 
  | ACCESS  -> (null : System.Object) 
  | MODE  -> (null : System.Object) 
  | FD  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | EXTERNAL  -> (null : System.Object) 
  | CONTAINS  -> (null : System.Object) 
  | RECORD  -> (null : System.Object) 
  | RECORDS  -> (null : System.Object) 
  | CHARACTERS  -> (null : System.Object) 
  | COMPRESSED  -> (null : System.Object) 
  | LABEL  -> (null : System.Object) 
  | STANDARD  -> (null : System.Object) 
  | OMITTED  -> (null : System.Object) 
  | ARE  -> (null : System.Object) 
  | COPY  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | ON  -> (null : System.Object) 
  | SUPPRESS  -> (null : System.Object) 
  | REPLACING  -> (null : System.Object) 
  | BY  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | RECORDING  -> (null : System.Object) 
  | PROCEDURE_DIVISION_BEGINS  -> (null : System.Object) 
  | PIC_NUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PIC _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 1us; 65535us; 2us; 3us; 1us; 65535us; 4us; 5us; 1us; 65535us; 2us; 4us; 1us; 65535us; 2us; 10us; 2us; 65535us; 2us; 9us; 10us; 11us; 1us; 65535us; 4us; 7us; 1us; 65535us; 4us; 22us; 1us; 65535us; 22us; 23us; 1us; 65535us; 22us; 27us; 1us; 65535us; 27us; 28us; 2us; 65535us; 27us; 32us; 33us; 34us; 2us; 65535us; 27us; 33us; 33us; 33us; 2us; 65535us; 27us; 35us; 33us; 35us; 2us; 65535us; 38us; 39us; 41us; 42us; 2us; 65535us; 38us; 41us; 41us; 41us; 2us; 65535us; 27us; 36us; 33us; 36us; 2us; 65535us; 27us; 49us; 33us; 49us; 1us; 65535us; 49us; 50us; 1us; 65535us; 49us; 54us; 1us; 65535us; 49us; 55us; 1us; 65535us; 55us; 56us; 1us; 65535us; 55us; 59us; 1us; 65535us; 59us; 60us; 2us; 65535us; 67us; 69us; 71us; 72us; 2us; 65535us; 67us; 71us; 71us; 71us; 2us; 65535us; 67us; 85us; 71us; 85us; 4us; 65535us; 67us; 98us; 71us; 98us; 92us; 93us; 100us; 101us; 1us; 65535us; 7us; 8us; 1us; 65535us; 107us; 108us; 1us; 65535us; 107us; 110us; 2us; 65535us; 114us; 115us; 116us; 117us; 2us; 65535us; 114us; 116us; 116us; 116us; 2us; 65535us; 119us; 120us; 123us; 124us; 2us; 65535us; 119us; 123us; 123us; 123us; 2us; 65535us; 129us; 130us; 133us; 134us; 1us; 65535us; 130us; 131us; 2us; 65535us; 138us; 139us; 142us; 143us; 2us; 65535us; 107us; 109us; 110us; 111us; 3us; 65535us; 121us; 122us; 161us; 162us; 163us; 164us; 3us; 65535us; 121us; 163us; 161us; 163us; 163us; 163us; 3us; 65535us; 121us; 165us; 161us; 165us; 163us; 165us; 3us; 65535us; 121us; 169us; 161us; 169us; 163us; 169us; 3us; 65535us; 121us; 170us; 161us; 170us; 163us; 170us; 1us; 65535us; 170us; 173us; 1us; 65535us; 170us; 174us; 1us; 65535us; 170us; 177us; 3us; 65535us; 184us; 185us; 194us; 195us; 196us; 197us; 1us; 65535us; 174us; 176us; 2us; 65535us; 174us; 183us; 175us; 192us; 3us; 65535us; 174us; 175us; 177us; 178us; 183us; 193us; 2us; 65535us; 200us; 201us; 202us; 203us; 5us; 65535us; 200us; 206us; 202us; 206us; 208us; 212us; 209us; 212us; 213us; 214us; 3us; 65535us; 200us; 218us; 202us; 218us; 219us; 218us; 3us; 65535us; 200us; 207us; 202us; 207us; 219us; 220us; 7us; 65535us; 200us; 209us; 202us; 209us; 208us; 208us; 209us; 208us; 213us; 208us; 216us; 217us; 219us; 215us; 1us; 65535us; 166us; 167us; 2us; 65535us; 227us; 229us; 228us; 230us; 1us; 65535us; 166us; 227us; 2us; 65535us; 226us; 235us; 236us; 241us; 1us; 65535us; 236us; 237us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 243us; 247us; 248us; 2us; 65535us; 0us; 247us; 247us; 247us; 2us; 65535us; 0us; 249us; 247us; 249us; 1us; 65535us; 0us; 245us; 2us; 65535us; 0us; 253us; 254us; 255us; 5us; 65535us; 0us; 256us; 254us; 256us; 257us; 258us; 259us; 260us; 261us; 262us; 5us; 65535us; 0us; 259us; 254us; 259us; 257us; 259us; 259us; 259us; 261us; 259us; 1us; 65535us; 259us; 261us; 5us; 65535us; 0us; 263us; 254us; 263us; 257us; 263us; 259us; 263us; 261us; 263us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 4us; 6us; 8us; 10us; 13us; 15us; 17us; 19us; 21us; 23us; 26us; 29us; 32us; 35us; 38us; 41us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 59us; 62us; 65us; 70us; 72us; 74us; 76us; 79us; 82us; 85us; 88us; 91us; 93us; 96us; 99us; 103us; 107us; 111us; 115us; 119us; 121us; 123us; 125us; 129us; 131us; 134us; 138us; 141us; 147us; 151us; 155us; 163us; 165us; 168us; 170us; 173us; 175us; 177us; 180us; 183us; 186us; 188us; 191us; 197us; 203us; 205us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 1us; 7us; 1us; 7us; 1us; 7us; 1us; 7us; 2us; 8us; 9us; 1us; 9us; 1us; 10us; 1us; 10us; 1us; 10us; 2us; 11us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 2us; 15us; 16us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 19us; 2us; 20us; 21us; 1us; 21us; 1us; 22us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 2us; 24us; 25us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 26us; 1us; 27us; 2us; 28us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 2us; 32us; 33us; 1us; 32us; 1us; 33us; 1us; 33us; 2us; 34us; 35us; 2us; 34us; 35us; 2us; 34us; 35us; 1us; 34us; 1us; 35us; 1us; 35us; 2us; 36us; 37us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 50us; 2us; 51us; 52us; 2us; 51us; 52us; 2us; 51us; 52us; 1us; 52us; 2us; 53us; 54us; 1us; 54us; 2us; 55us; 56us; 2us; 55us; 56us; 2us; 55us; 56us; 2us; 55us; 56us; 1us; 56us; 2us; 57us; 58us; 1us; 58us; 2us; 59us; 60us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 2us; 62us; 63us; 2us; 62us; 63us; 2us; 62us; 63us; 1us; 62us; 1us; 63us; 1us; 63us; 2us; 64us; 65us; 2us; 64us; 65us; 1us; 64us; 1us; 65us; 2us; 66us; 67us; 2us; 66us; 67us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 68us; 2us; 69us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 75us; 2us; 76us; 77us; 1us; 77us; 2us; 78us; 79us; 2us; 78us; 79us; 1us; 79us; 1us; 79us; 1us; 80us; 6us; 81us; 82us; 83us; 84us; 85us; 86us; 1us; 82us; 1us; 82us; 1us; 83us; 4us; 84us; 85us; 89us; 90us; 2us; 84us; 100us; 1us; 85us; 2us; 86us; 91us; 1us; 86us; 2us; 87us; 88us; 2us; 87us; 88us; 1us; 88us; 1us; 88us; 2us; 90us; 101us; 2us; 92us; 93us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 2us; 102us; 103us; 1us; 102us; 1us; 103us; 1us; 103us; 2us; 104us; 106us; 2us; 104us; 106us; 2us; 105us; 107us; 2us; 105us; 107us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 108us; 1us; 109us; 3us; 110us; 113us; 114us; 4us; 110us; 113us; 114us; 115us; 1us; 111us; 1us; 112us; 1us; 113us; 1us; 114us; 1us; 114us; 1us; 115us; 1us; 115us; 1us; 115us; 2us; 116us; 117us; 1us; 117us; 1us; 117us; 1us; 118us; 1us; 119us; 1us; 120us; 1us; 121us; 2us; 122us; 128us; 2us; 122us; 128us; 4us; 123us; 124us; 125us; 126us; 2us; 124us; 126us; 1us; 125us; 1us; 126us; 1us; 127us; 1us; 127us; 1us; 127us; 1us; 127us; 1us; 128us; 1us; 128us; 1us; 128us; 1us; 128us; 1us; 129us; 1us; 130us; 1us; 131us; 1us; 132us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 134us; 2us; 135us; 136us; 1us; 136us; 2us; 137us; 138us; 1us; 138us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 142us; 1us; 142us; 2us; 143us; 144us; 1us; 144us; 1us; 144us; 3us; 145us; 146us; 147us; 1us; 146us; 1us; 147us; 1us; 147us; 2us; 148us; 149us; 1us; 149us; 1us; 150us; 1us; 151us; 1us; 152us; 1us; 153us; 1us; 154us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 34us; 36us; 38us; 40us; 42us; 44us; 47us; 49us; 51us; 53us; 55us; 58us; 60us; 62us; 64us; 66us; 68us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 105us; 107us; 109us; 111us; 113us; 115us; 118us; 120us; 122us; 124us; 126us; 128us; 131us; 133us; 135us; 137us; 140us; 143us; 146us; 148us; 150us; 152us; 155us; 157us; 159us; 161us; 163us; 165us; 167us; 169us; 171us; 173us; 175us; 177us; 179us; 181us; 183us; 185us; 187us; 189us; 191us; 193us; 195us; 197us; 199us; 201us; 203us; 205us; 207us; 209us; 211us; 213us; 215us; 217us; 219us; 221us; 223us; 225us; 227us; 229us; 231us; 233us; 235us; 238us; 241us; 244us; 246us; 249us; 251us; 254us; 257us; 260us; 263us; 265us; 268us; 270us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 288us; 291us; 294us; 296us; 298us; 300us; 303us; 306us; 308us; 310us; 313us; 316us; 318us; 320us; 322us; 324us; 326us; 328us; 331us; 333us; 335us; 337us; 339us; 341us; 343us; 345us; 347us; 349us; 351us; 353us; 355us; 358us; 360us; 363us; 366us; 368us; 370us; 372us; 379us; 381us; 383us; 385us; 390us; 393us; 395us; 398us; 400us; 403us; 406us; 408us; 410us; 413us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; 434us; 437us; 439us; 441us; 443us; 446us; 449us; 452us; 455us; 457us; 459us; 461us; 463us; 465us; 467us; 471us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 495us; 497us; 499us; 501us; 503us; 505us; 507us; 510us; 513us; 518us; 521us; 523us; 525us; 527us; 529us; 531us; 533us; 535us; 537us; 539us; 541us; 543us; 545us; 547us; 549us; 551us; 553us; 555us; 557us; 560us; 562us; 565us; 567us; 569us; 571us; 573us; 575us; 577us; 580us; 582us; 584us; 588us; 590us; 592us; 594us; 597us; 599us; 601us; 603us; 605us; 607us; |]
let _fsyacc_action_rows = 270
let _fsyacc_actionTableElements = [|6us; 32768us; 15us; 251us; 16us; 252us; 17us; 267us; 18us; 268us; 19us; 269us; 21us; 254us; 0us; 49152us; 2us; 32768us; 28us; 15us; 41us; 12us; 0us; 49152us; 1us; 32768us; 30us; 24us; 1us; 32768us; 83us; 6us; 0us; 16386us; 1us; 32768us; 33us; 105us; 0us; 16387us; 0us; 16388us; 1us; 32768us; 28us; 15us; 0us; 16389us; 1us; 32768us; 37us; 13us; 1us; 32768us; 88us; 14us; 0us; 16390us; 1us; 32768us; 26us; 16us; 1us; 32768us; 14us; 17us; 1us; 32768us; 29us; 18us; 1us; 32768us; 14us; 19us; 1us; 32768us; 88us; 20us; 1us; 32768us; 14us; 21us; 0us; 16391us; 1us; 16392us; 31us; 29us; 0us; 16393us; 1us; 32768us; 26us; 25us; 1us; 32768us; 14us; 26us; 0us; 16394us; 2us; 16395us; 34us; 37us; 40us; 51us; 0us; 16396us; 1us; 32768us; 27us; 30us; 1us; 32768us; 14us; 31us; 0us; 16397us; 0us; 16398us; 2us; 16399us; 34us; 37us; 40us; 51us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 1us; 32768us; 14us; 38us; 2us; 32768us; 35us; 46us; 88us; 43us; 1us; 32768us; 14us; 40us; 0us; 16403us; 2us; 16404us; 35us; 46us; 88us; 43us; 0us; 16405us; 1us; 32768us; 39us; 44us; 1us; 32768us; 88us; 45us; 0us; 16406us; 1us; 32768us; 39us; 47us; 1us; 32768us; 36us; 48us; 0us; 16407us; 1us; 16408us; 42us; 57us; 0us; 16409us; 1us; 32768us; 27us; 52us; 1us; 32768us; 14us; 53us; 0us; 16410us; 0us; 16411us; 1us; 16412us; 44us; 61us; 0us; 16413us; 1us; 32768us; 14us; 58us; 0us; 16414us; 1us; 32768us; 46us; 65us; 0us; 16415us; 2us; 32768us; 45us; 63us; 88us; 62us; 0us; 16416us; 1us; 32768us; 88us; 64us; 0us; 16417us; 1us; 32768us; 81us; 66us; 1us; 32768us; 88us; 67us; 9us; 32768us; 14us; 68us; 43us; 81us; 48us; 73us; 50us; 76us; 54us; 99us; 56us; 102us; 57us; 103us; 58us; 104us; 60us; 90us; 0us; 16418us; 1us; 32768us; 14us; 70us; 0us; 16419us; 8us; 16420us; 43us; 81us; 48us; 73us; 50us; 76us; 54us; 99us; 56us; 102us; 57us; 103us; 58us; 104us; 60us; 90us; 0us; 16421us; 1us; 32768us; 86us; 74us; 1us; 32768us; 49us; 75us; 0us; 16422us; 1us; 32768us; 51us; 77us; 1us; 32768us; 39us; 78us; 1us; 32768us; 86us; 79us; 1us; 32768us; 53us; 80us; 0us; 16423us; 1us; 32768us; 47us; 82us; 1us; 32768us; 39us; 83us; 1us; 32768us; 88us; 84us; 0us; 16424us; 1us; 32768us; 55us; 86us; 1us; 32768us; 59us; 87us; 1us; 32768us; 39us; 88us; 1us; 32768us; 88us; 89us; 0us; 16425us; 1us; 32768us; 61us; 91us; 1us; 32768us; 39us; 92us; 3us; 32768us; 56us; 102us; 57us; 103us; 58us; 104us; 1us; 32768us; 66us; 94us; 1us; 32768us; 59us; 95us; 1us; 32768us; 39us; 96us; 1us; 32768us; 88us; 97us; 0us; 16426us; 0us; 16427us; 1us; 32768us; 39us; 100us; 3us; 32768us; 56us; 102us; 57us; 103us; 58us; 104us; 0us; 16428us; 0us; 16429us; 0us; 16430us; 0us; 16431us; 1us; 32768us; 26us; 106us; 1us; 32768us; 14us; 107us; 2us; 32768us; 32us; 159us; 43us; 112us; 0us; 16432us; 0us; 16433us; 1us; 32768us; 32us; 159us; 0us; 16434us; 1us; 32768us; 27us; 113us; 1us; 32768us; 14us; 114us; 1us; 16435us; 62us; 118us; 0us; 16436us; 1us; 16437us; 62us; 118us; 0us; 16438us; 1us; 32768us; 88us; 119us; 6us; 32768us; 33us; 142us; 39us; 125us; 52us; 128us; 66us; 132us; 70us; 138us; 82us; 146us; 1us; 32768us; 14us; 121us; 1us; 16439us; 86us; 179us; 0us; 16440us; 6us; 16441us; 33us; 142us; 39us; 125us; 52us; 128us; 66us; 132us; 70us; 138us; 82us; 146us; 0us; 16442us; 2us; 32768us; 63us; 126us; 64us; 127us; 0us; 16443us; 0us; 16444us; 1us; 32768us; 65us; 129us; 1us; 32768us; 86us; 150us; 2us; 32768us; 67us; 153us; 68us; 154us; 0us; 16445us; 1us; 32768us; 65us; 133us; 1us; 32768us; 86us; 150us; 2us; 32768us; 68us; 135us; 69us; 136us; 0us; 16446us; 1us; 32768us; 68us; 137us; 0us; 16447us; 2us; 32768us; 66us; 155us; 67us; 157us; 2us; 32768us; 71us; 140us; 72us; 141us; 0us; 16448us; 0us; 16449us; 2us; 32768us; 66us; 155us; 67us; 157us; 2us; 32768us; 71us; 144us; 72us; 145us; 0us; 16450us; 0us; 16451us; 1us; 32768us; 61us; 147us; 1us; 32768us; 39us; 148us; 1us; 32768us; 88us; 149us; 0us; 16452us; 1us; 16453us; 81us; 151us; 1us; 32768us; 86us; 152us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 1us; 32768us; 39us; 156us; 0us; 16457us; 1us; 32768us; 73us; 158us; 0us; 16458us; 1us; 32768us; 27us; 160us; 1us; 32768us; 14us; 161us; 1us; 32768us; 86us; 179us; 0us; 16459us; 1us; 16460us; 86us; 179us; 0us; 16461us; 1us; 32768us; 14us; 166us; 1us; 16462us; 74us; 225us; 1us; 32768us; 14us; 168us; 0us; 16463us; 0us; 16464us; 2us; 16465us; 1us; 171us; 90us; 184us; 1us; 32768us; 86us; 172us; 0us; 16466us; 0us; 16467us; 3us; 16473us; 1us; 198us; 2us; 200us; 11us; 194us; 1us; 16468us; 11us; 194us; 0us; 16469us; 2us; 16475us; 1us; 198us; 2us; 200us; 0us; 16470us; 1us; 32768us; 88us; 180us; 1us; 16471us; 10us; 181us; 1us; 32768us; 88us; 182us; 0us; 16472us; 2us; 16474us; 1us; 198us; 2us; 200us; 6us; 16476us; 4us; 189us; 5us; 188us; 6us; 187us; 7us; 186us; 8us; 190us; 9us; 191us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; 7us; 32768us; 4us; 189us; 5us; 188us; 6us; 187us; 7us; 186us; 8us; 190us; 9us; 191us; 39us; 196us; 0us; 16486us; 6us; 32768us; 4us; 189us; 5us; 188us; 6us; 187us; 7us; 186us; 8us; 190us; 9us; 191us; 0us; 16487us; 1us; 32768us; 86us; 199us; 1us; 16488us; 2us; 202us; 6us; 32768us; 24us; 210us; 25us; 211us; 85us; 223us; 86us; 221us; 87us; 222us; 89us; 224us; 1us; 16489us; 1us; 204us; 6us; 32768us; 24us; 210us; 25us; 211us; 85us; 223us; 86us; 221us; 87us; 222us; 89us; 224us; 0us; 16490us; 1us; 32768us; 86us; 205us; 0us; 16491us; 0us; 16492us; 0us; 16493us; 7us; 16494us; 13us; 213us; 24us; 210us; 25us; 211us; 85us; 223us; 86us; 221us; 87us; 222us; 89us; 224us; 8us; 16494us; 3us; 216us; 13us; 213us; 24us; 210us; 25us; 211us; 85us; 223us; 86us; 221us; 87us; 222us; 89us; 224us; 0us; 16495us; 0us; 16496us; 0us; 16497us; 6us; 32768us; 24us; 210us; 25us; 211us; 85us; 223us; 86us; 221us; 87us; 222us; 89us; 224us; 0us; 16498us; 1us; 32768us; 3us; 216us; 4us; 32768us; 85us; 223us; 86us; 221us; 87us; 222us; 89us; 224us; 0us; 16499us; 1us; 16500us; 13us; 219us; 4us; 32768us; 85us; 223us; 86us; 221us; 87us; 222us; 89us; 224us; 0us; 16501us; 0us; 16502us; 0us; 16503us; 0us; 16504us; 0us; 16505us; 1us; 32768us; 88us; 226us; 2us; 16506us; 75us; 239us; 76us; 240us; 2us; 16507us; 78us; 228us; 79us; 231us; 1us; 16508us; 79us; 231us; 0us; 16509us; 0us; 16510us; 1us; 32768us; 88us; 232us; 1us; 32768us; 80us; 233us; 1us; 32768us; 88us; 234us; 0us; 16511us; 1us; 32768us; 88us; 236us; 3us; 32768us; 75us; 239us; 76us; 240us; 77us; 242us; 1us; 32768us; 88us; 238us; 0us; 16512us; 0us; 16513us; 0us; 16514us; 0us; 16515us; 0us; 16516us; 1us; 32768us; 0us; 244us; 0us; 16517us; 1us; 32768us; 0us; 246us; 0us; 16518us; 2us; 16519us; 15us; 251us; 16us; 252us; 0us; 16520us; 1us; 16521us; 84us; 250us; 0us; 16522us; 0us; 16523us; 0us; 16524us; 0us; 16525us; 3us; 32768us; 17us; 267us; 18us; 268us; 19us; 269us; 0us; 16526us; 1us; 16527us; 20us; 257us; 3us; 32768us; 17us; 267us; 18us; 268us; 19us; 269us; 0us; 16528us; 5us; 16529us; 17us; 267us; 18us; 268us; 19us; 269us; 22us; 265us; 23us; 266us; 0us; 16530us; 3us; 32768us; 17us; 267us; 18us; 268us; 19us; 269us; 0us; 16531us; 1us; 16532us; 84us; 264us; 0us; 16533us; 0us; 16534us; 0us; 16535us; 0us; 16536us; 0us; 16537us; 0us; 16538us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 7us; 8us; 11us; 12us; 14us; 16us; 17us; 19us; 20us; 21us; 23us; 24us; 26us; 28us; 29us; 31us; 33us; 35us; 37us; 39us; 41us; 42us; 44us; 45us; 47us; 49us; 50us; 53us; 54us; 56us; 58us; 59us; 60us; 63us; 64us; 65us; 66us; 68us; 71us; 73us; 74us; 77us; 78us; 80us; 82us; 83us; 85us; 87us; 88us; 90us; 91us; 93us; 95us; 96us; 97us; 99us; 100us; 102us; 103us; 105us; 106us; 109us; 110us; 112us; 113us; 115us; 117us; 127us; 128us; 130us; 131us; 140us; 141us; 143us; 145us; 146us; 148us; 150us; 152us; 154us; 155us; 157us; 159us; 161us; 162us; 164us; 166us; 168us; 170us; 171us; 173us; 175us; 179us; 181us; 183us; 185us; 187us; 188us; 189us; 191us; 195us; 196us; 197us; 198us; 199us; 201us; 203us; 206us; 207us; 208us; 210us; 211us; 213us; 215us; 217us; 218us; 220us; 221us; 223us; 230us; 232us; 234us; 235us; 242us; 243us; 246us; 247us; 248us; 250us; 252us; 255us; 256us; 258us; 260us; 263us; 264us; 266us; 267us; 270us; 273us; 274us; 275us; 278us; 281us; 282us; 283us; 285us; 287us; 289us; 290us; 292us; 294us; 295us; 296us; 297us; 299us; 300us; 302us; 303us; 305us; 307us; 309us; 310us; 312us; 313us; 315us; 317us; 319us; 320us; 321us; 324us; 326us; 327us; 328us; 332us; 334us; 335us; 338us; 339us; 341us; 343us; 345us; 346us; 349us; 356us; 357us; 358us; 359us; 360us; 361us; 362us; 363us; 364us; 365us; 373us; 374us; 381us; 382us; 384us; 386us; 393us; 395us; 402us; 403us; 405us; 406us; 407us; 408us; 416us; 425us; 426us; 427us; 428us; 435us; 436us; 438us; 443us; 444us; 446us; 451us; 452us; 453us; 454us; 455us; 456us; 458us; 461us; 464us; 466us; 467us; 468us; 470us; 472us; 474us; 475us; 477us; 481us; 483us; 484us; 485us; 486us; 487us; 488us; 490us; 491us; 493us; 494us; 497us; 498us; 500us; 501us; 502us; 503us; 504us; 508us; 509us; 511us; 515us; 516us; 522us; 523us; 527us; 528us; 530us; 531us; 532us; 533us; 534us; 535us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 3us; 2us; 1us; 2us; 3us; 7us; 1us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 4us; 1us; 2us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 5us; 1us; 2us; 3us; 5us; 4us; 5us; 8us; 1us; 3us; 1us; 1us; 1us; 4us; 1us; 2us; 3us; 4us; 1us; 2us; 4us; 5us; 1us; 2us; 2us; 2us; 4us; 4us; 5us; 3us; 3us; 3us; 3us; 4us; 1us; 3us; 1us; 1us; 2us; 2us; 4us; 1us; 2us; 2us; 4us; 1us; 1us; 3us; 2us; 3us; 3us; 3us; 2us; 4us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 2us; 2us; 4us; 4us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 2us; 3us; 4us; 6us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 2us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 4us; 5us; 6us; 7us; 7us; 8us; 9us; 9us; 10us; 11us; 12us; 12us; 13us; 13us; 14us; 15us; 15us; 16us; 16us; 17us; 17us; 18us; 19us; 20us; 20us; 21us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 27us; 27us; 28us; 28us; 28us; 29us; 30us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 35us; 36us; 36us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 41us; 41us; 42us; 43us; 43us; 43us; 43us; 43us; 43us; 44us; 44us; 45us; 45us; 45us; 46us; 47us; 48us; 48us; 48us; 48us; 48us; 48us; 49us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 57us; 57us; 57us; 57us; 57us; 58us; 59us; 60us; 60us; 61us; 61us; 62us; 62us; 63us; 63us; 64us; 64us; 65us; 65us; 66us; 66us; 67us; 67us; 68us; 68us; 68us; 69us; 69us; 70us; 70us; 71us; 71us; 71us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 65535us; 16386us; 65535us; 16387us; 16388us; 65535us; 16389us; 65535us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16391us; 65535us; 16393us; 65535us; 65535us; 16394us; 65535us; 16396us; 65535us; 65535us; 16397us; 16398us; 65535us; 16400us; 16401us; 16402us; 65535us; 65535us; 65535us; 16403us; 65535us; 16405us; 65535us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 16409us; 65535us; 65535us; 16410us; 16411us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 16416us; 65535us; 16417us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 65535us; 16421us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 65535us; 16423us; 65535us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 65535us; 16428us; 16429us; 16430us; 16431us; 65535us; 65535us; 65535us; 16432us; 16433us; 65535us; 16434us; 65535us; 65535us; 65535us; 16436us; 65535us; 16438us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 16442us; 65535us; 16443us; 16444us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 65535us; 16446us; 65535us; 16447us; 65535us; 65535us; 16448us; 16449us; 65535us; 65535us; 16450us; 16451us; 65535us; 65535us; 65535us; 16452us; 65535us; 65535us; 16454us; 16455us; 16456us; 65535us; 16457us; 65535us; 16458us; 65535us; 65535us; 65535us; 16459us; 65535us; 16461us; 65535us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16466us; 16467us; 65535us; 65535us; 16469us; 65535us; 16470us; 65535us; 65535us; 65535us; 16472us; 65535us; 65535us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; 16484us; 16485us; 65535us; 16486us; 65535us; 16487us; 65535us; 65535us; 65535us; 65535us; 65535us; 16490us; 65535us; 16491us; 16492us; 16493us; 65535us; 65535us; 16495us; 16496us; 16497us; 65535us; 16498us; 65535us; 65535us; 16499us; 65535us; 65535us; 16501us; 16502us; 16503us; 16504us; 16505us; 65535us; 65535us; 65535us; 65535us; 16509us; 16510us; 65535us; 65535us; 65535us; 16511us; 65535us; 65535us; 65535us; 16512us; 16513us; 16514us; 16515us; 16516us; 65535us; 16517us; 65535us; 16518us; 65535us; 16520us; 65535us; 16522us; 16523us; 16524us; 16525us; 65535us; 16526us; 65535us; 65535us; 16528us; 65535us; 16530us; 65535us; 16531us; 65535us; 16533us; 16534us; 16535us; 16536us; 16537us; 16538us; |]
let _fsyacc_reductions ()  =    [| 
# 839 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Absyn.Cobol.DataDiv.format )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startdatadiv_format));
# 848 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Absyn.Cobol.program )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startprogram));
# 857 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'iddiv)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'program1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "CobolParser.fsy"
                                                                       let (env, data) = _2 in new program (locate parseState 1 _1, env, data, locate parseState 3 ()) 
                   )
# 49 "CobolParser.fsy"
                 :  Absyn.Cobol.program ));
# 869 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CobolParser.fsy"
                                                                       (locate parseState 1 _1, locate parseState 2 _2) 
                   )
# 52 "CobolParser.fsy"
                 : 'program1));
# 881 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'iddiv_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CobolParser.fsy"
                                              _1 
                   )
# 59 "CobolParser.fsy"
                 : 'iddiv));
# 892 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'member_name)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'iddiv_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CobolParser.fsy"
                                                       _2 
                   )
# 60 "CobolParser.fsy"
                 : 'iddiv));
# 904 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CobolParser.fsy"
                                              
                   )
# 63 "CobolParser.fsy"
                 : 'member_name));
# 915 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CobolParser.fsy"
                                                      _6 
                   )
# 67 "CobolParser.fsy"
                 : 'iddiv_body));
# 926 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_title)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "CobolParser.fsy"
                                                                       () 
                   )
# 74 "CobolParser.fsy"
                 : 'envdiv));
# 937 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_title)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CobolParser.fsy"
                                                                       () 
                   )
# 75 "CobolParser.fsy"
                 : 'envdiv));
# 949 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "CobolParser.fsy"
                                                        
                   )
# 78 "CobolParser.fsy"
                 : 'envdiv_title));
# 959 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf_title)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "CobolParser.fsy"
                                                
                   )
# 81 "CobolParser.fsy"
                 : 'envdiv_conf));
# 970 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf_title)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "CobolParser.fsy"
                                                                
                   )
# 82 "CobolParser.fsy"
                 : 'envdiv_conf));
# 982 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "CobolParser.fsy"
                                                         
                   )
# 85 "CobolParser.fsy"
                 : 'envdiv_conf_title));
# 992 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf_options)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CobolParser.fsy"
                                                  
                   )
# 88 "CobolParser.fsy"
                 : 'envdiv_conf_body));
# 1003 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf_option)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CobolParser.fsy"
                                                 
                   )
# 91 "CobolParser.fsy"
                 : 'envdiv_conf_options));
# 1014 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf_option)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'envdiv_conf_options)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CobolParser.fsy"
                                                                   
                   )
# 92 "CobolParser.fsy"
                 : 'envdiv_conf_options));
# 1026 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'special_names)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CobolParser.fsy"
                                             
                   )
# 95 "CobolParser.fsy"
                 : 'envdiv_conf_option));
# 1037 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'input_output)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CobolParser.fsy"
                                               
                   )
# 96 "CobolParser.fsy"
                 : 'envdiv_conf_option));
# 1048 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'special_names_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CobolParser.fsy"
                                                                 
                   )
# 99 "CobolParser.fsy"
                 : 'special_names));
# 1059 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'special_name)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CobolParser.fsy"
                                            
                   )
# 102 "CobolParser.fsy"
                 : 'special_names_body));
# 1070 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'special_name)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'special_names_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CobolParser.fsy"
                                                              
                   )
# 103 "CobolParser.fsy"
                 : 'special_names_body));
# 1082 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CobolParser.fsy"
                                         
                   )
# 106 "CobolParser.fsy"
                 : 'special_name));
# 1094 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CobolParser.fsy"
                                                             
                   )
# 107 "CobolParser.fsy"
                 : 'special_name));
# 1104 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'input_output_title)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CobolParser.fsy"
                                                 
                   )
# 110 "CobolParser.fsy"
                 : 'input_output));
# 1115 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'input_output_title)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'input_output_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CobolParser.fsy"
                                                                 
                   )
# 111 "CobolParser.fsy"
                 : 'input_output));
# 1127 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CobolParser.fsy"
                                                     
                   )
# 114 "CobolParser.fsy"
                 : 'input_output_title));
# 1137 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CobolParser.fsy"
                                          
                   )
# 117 "CobolParser.fsy"
                 : 'input_output_body));
# 1148 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_title)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CobolParser.fsy"
                                               
                   )
# 120 "CobolParser.fsy"
                 : 'file_ctrl));
# 1159 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_title)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CobolParser.fsy"
                                                             
                   )
# 121 "CobolParser.fsy"
                 : 'file_ctrl));
# 1171 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CobolParser.fsy"
                                               
                   )
# 124 "CobolParser.fsy"
                 : 'file_ctrl_title));
# 1181 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_sel)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_sel_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CobolParser.fsy"
                                                           
                   )
# 127 "CobolParser.fsy"
                 : 'file_ctrl_body));
# 1193 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CobolParser.fsy"
                                          
                   )
# 130 "CobolParser.fsy"
                 : 'file_ctrl_sel));
# 1204 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CobolParser.fsy"
                                                    
                   )
# 131 "CobolParser.fsy"
                 : 'file_ctrl_sel));
# 1215 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CobolParser.fsy"
                                               
                   )
# 134 "CobolParser.fsy"
                 : 'file_ctrl_sel_body));
# 1226 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_options)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CobolParser.fsy"
                                                                
                   )
# 135 "CobolParser.fsy"
                 : 'file_ctrl_sel_body));
# 1238 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_option)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CobolParser.fsy"
                                               
                   )
# 138 "CobolParser.fsy"
                 : 'file_ctrl_options));
# 1249 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_option)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_ctrl_options)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CobolParser.fsy"
                                                                
                   )
# 139 "CobolParser.fsy"
                 : 'file_ctrl_options));
# 1261 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CobolParser.fsy"
                                                   
                   )
# 142 "CobolParser.fsy"
                 : 'file_ctrl_option));
# 1272 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CobolParser.fsy"
                                                            
                   )
# 143 "CobolParser.fsy"
                 : 'file_ctrl_option));
# 1283 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CobolParser.fsy"
                                                   
                   )
# 144 "CobolParser.fsy"
                 : 'file_ctrl_option));
# 1294 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'organization_mode)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CobolParser.fsy"
                                                                 
                   )
# 145 "CobolParser.fsy"
                 : 'file_ctrl_option));
# 1306 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'mode)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CobolParser.fsy"
                                                                 
                   )
# 146 "CobolParser.fsy"
                 : 'file_ctrl_option));
# 1318 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'mode)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CobolParser.fsy"
                                      
                   )
# 149 "CobolParser.fsy"
                 : 'organization_mode));
# 1329 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'mode)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CobolParser.fsy"
                                                     
                   )
# 150 "CobolParser.fsy"
                 : 'organization_mode));
# 1340 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CobolParser.fsy"
                                           
                   )
# 153 "CobolParser.fsy"
                 : 'mode));
# 1350 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CobolParser.fsy"
                                           
                   )
# 154 "CobolParser.fsy"
                 : 'mode));
# 1360 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CobolParser.fsy"
                                            
                   )
# 155 "CobolParser.fsy"
                 : 'mode));
# 1370 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CobolParser.fsy"
                                                             _4 
                   )
# 163 "CobolParser.fsy"
                 : 'datadiv));
# 1381 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_section)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CobolParser.fsy"
                                                _1 
                   )
# 166 "CobolParser.fsy"
                 : 'datadiv_body));
# 1392 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_section)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_section)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CobolParser.fsy"
                                                            _2 
                   )
# 167 "CobolParser.fsy"
                 : 'datadiv_body));
# 1404 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CobolParser.fsy"
                                                
                   )
# 170 "CobolParser.fsy"
                 : 'file_section));
# 1414 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'files)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CobolParser.fsy"
                                                        
                   )
# 171 "CobolParser.fsy"
                 : 'file_section));
# 1425 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CobolParser.fsy"
                                       
                   )
# 174 "CobolParser.fsy"
                 : 'files));
# 1436 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'files)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CobolParser.fsy"
                                               
                   )
# 175 "CobolParser.fsy"
                 : 'files));
# 1448 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_options)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CobolParser.fsy"
                                                     
                   )
# 178 "CobolParser.fsy"
                 : 'file));
# 1460 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_options)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CobolParser.fsy"
                                                                  
                   )
# 179 "CobolParser.fsy"
                 : 'file));
# 1473 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_option)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CobolParser.fsy"
                                             
                   )
# 182 "CobolParser.fsy"
                 : 'file_options));
# 1484 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_option)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'file_options)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CobolParser.fsy"
                                                         
                   )
# 183 "CobolParser.fsy"
                 : 'file_options));
# 1496 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CobolParser.fsy"
                                           
                   )
# 186 "CobolParser.fsy"
                 : 'file_option));
# 1506 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CobolParser.fsy"
                                                
                   )
# 187 "CobolParser.fsy"
                 : 'file_option));
# 1516 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'n_items)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileo_items)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CobolParser.fsy"
                                                                 
                   )
# 188 "CobolParser.fsy"
                 : 'file_option));
# 1528 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'n_items)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CobolParser.fsy"
                                                                 
                   )
# 189 "CobolParser.fsy"
                 : 'file_option));
# 1539 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'n_items)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CobolParser.fsy"
                                                                         
                   )
# 190 "CobolParser.fsy"
                 : 'file_option));
# 1550 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CobolParser.fsy"
                                                      
                   )
# 191 "CobolParser.fsy"
                 : 'file_option));
# 1561 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CobolParser.fsy"
                                                     
                   )
# 192 "CobolParser.fsy"
                 : 'file_option));
# 1572 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CobolParser.fsy"
                                                     
                   )
# 193 "CobolParser.fsy"
                 : 'file_option));
# 1583 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CobolParser.fsy"
                                                    
                   )
# 194 "CobolParser.fsy"
                 : 'file_option));
# 1594 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CobolParser.fsy"
                                                      
                   )
# 195 "CobolParser.fsy"
                 : 'file_option));
# 1605 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CobolParser.fsy"
                                         
                   )
# 198 "CobolParser.fsy"
                 : 'n_items));
# 1616 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CobolParser.fsy"
                                                    
                   )
# 199 "CobolParser.fsy"
                 : 'n_items));
# 1628 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CobolParser.fsy"
                                          
                   )
# 202 "CobolParser.fsy"
                 : 'fileo_items));
# 1638 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CobolParser.fsy"
                                               
                   )
# 203 "CobolParser.fsy"
                 : 'fileo_items));
# 1648 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CobolParser.fsy"
                                           
                   )
# 206 "CobolParser.fsy"
                 : 'recs));
# 1658 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CobolParser.fsy"
                                                
                   )
# 207 "CobolParser.fsy"
                 : 'recs));
# 1668 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CobolParser.fsy"
                                                                           _4 
                   )
# 212 "CobolParser.fsy"
                 : 'storage_section));
# 1679 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_body_item)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CobolParser.fsy"
                                                 _1 
                   )
# 215 "CobolParser.fsy"
                 : 'storage_body));
# 1690 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_body_item)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CobolParser.fsy"
                                                              _1 @ _2 
                   )
# 216 "CobolParser.fsy"
                 : 'storage_body));
# 1702 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CobolParser.fsy"
                                                   [_1] 
                   )
# 219 "CobolParser.fsy"
                 : 'storage_body_item));
# 1713 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'copy_stmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CobolParser.fsy"
                                                              [_1] 
                   )
# 220 "CobolParser.fsy"
                 : 'storage_body_item));
# 1725 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'udatadiv_line)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CobolParser.fsy"
                                              locate parseState 1 _1 
                   )
# 223 "CobolParser.fsy"
                 : 'datadiv_line));
# 1736 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line_def)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CobolParser.fsy"
                                                       let (level, id, _) = _1 in DataDiv.Line (level, id, DataDiv.Record, ArraySize.of_int 1) 
                   )
# 226 "CobolParser.fsy"
                 : 'udatadiv_line));
# 1747 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line_def)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CobolParser.fsy"
                                                                  let (level, id, _) = _1 in DataDiv.Line (level, id, DataDiv.Record, ArraySize.of_uint64 _3) 
                   )
# 227 "CobolParser.fsy"
                 : 'udatadiv_line));
# 1759 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line_def)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_usage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CobolParser.fsy"
                                                                     let (level, id, _) = _1 in let (p, q) = _2 in DataDiv.Line (level, id, DataDiv.Picture (p, q, None), ArraySize.of_int 1) 
                   )
# 228 "CobolParser.fsy"
                 : 'udatadiv_line));
# 1771 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line_def)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_simple)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_occurs_val)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CobolParser.fsy"
                                                                                    let (level, id, _) = _1 in let (p, q) = _2 in let (vo, occurs) = _3 in DataDiv.Line (level, id, DataDiv.Picture (p, q, vo), occurs) 
                   )
# 229 "CobolParser.fsy"
                 : 'udatadiv_line));
# 1784 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line_def)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_simple)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_occurs_value_usage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CobolParser.fsy"
                                                                                          let (level, id, _) = _1 in let (p, _) = _2 in let ((vo, occurs), q) = _3 in DataDiv.Line (level, id, DataDiv.Picture (p, q, vo), occurs) 
                   )
# 230 "CobolParser.fsy"
                 : 'udatadiv_line));
# 1797 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_line_def)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_qualified)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_occurs_val)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CobolParser.fsy"
                                                                                      let (level, id, _) = _1 in let (p, q) = _2 in let (vo, occurs) = _3 in DataDiv.Line (level, id, DataDiv.Picture (p, q, vo), occurs) 
                   )
# 231 "CobolParser.fsy"
                 : 'udatadiv_line));
# 1810 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CobolParser.fsy"
                                            (uint16 _1, _2, None) 
                   )
# 234 "CobolParser.fsy"
                 : 'datadiv_line_def));
# 1822 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CobolParser.fsy"
                                                        (uint16 _1, _2, Some _4) 
                   )
# 235 "CobolParser.fsy"
                 : 'datadiv_line_def));
# 1835 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_simple)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CobolParser.fsy"
                                                 _1 
                   )
# 238 "CobolParser.fsy"
                 : 'datadiv_pic_usage));
# 1846 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_simple)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_usage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CobolParser.fsy"
                                                              let (p, _) = _1 in (p, Some _2) 
                   )
# 239 "CobolParser.fsy"
                 : 'datadiv_pic_usage));
# 1858 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_qualified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CobolParser.fsy"
                                                      _1 
                   )
# 240 "CobolParser.fsy"
                 : 'datadiv_pic_usage));
# 1869 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CobolParser.fsy"
                                                                       (_1, None) 
                   )
# 243 "CobolParser.fsy"
                 : 'datadiv_pic_simple));
# 1880 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CobolParser.fsy"
                                                                       (_1, Some _2) 
                   )
# 246 "CobolParser.fsy"
                 : 'datadiv_pic_qualified));
# 1892 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CobolParser.fsy"
                                                                       DataDiv.Comp3 
                   )
# 249 "CobolParser.fsy"
                 : 'datadiv_pic_qualifier));
# 1902 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CobolParser.fsy"
                                                                       DataDiv.Comp2 
                   )
# 250 "CobolParser.fsy"
                 : 'datadiv_pic_qualifier));
# 1912 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CobolParser.fsy"
                                                                       DataDiv.Comp1 
                   )
# 251 "CobolParser.fsy"
                 : 'datadiv_pic_qualifier));
# 1922 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CobolParser.fsy"
                                         DataDiv.Comp 
                   )
# 252 "CobolParser.fsy"
                 : 'datadiv_pic_qualifier));
# 1932 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CobolParser.fsy"
                                                 DataDiv.PackedDecimal 
                   )
# 253 "CobolParser.fsy"
                 : 'datadiv_pic_qualifier));
# 1942 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CobolParser.fsy"
                                           DataDiv.Binary 
                   )
# 254 "CobolParser.fsy"
                 : 'datadiv_pic_qualifier));
# 1952 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_occurs_val)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_usage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CobolParser.fsy"
                                                              (_1, Some _2) 
                   )
# 257 "CobolParser.fsy"
                 : 'datadiv_occurs_value_usage));
# 1964 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_usage)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_occurs_val)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CobolParser.fsy"
                                                               (_2, Some _1) 
                   )
# 258 "CobolParser.fsy"
                 : 'datadiv_occurs_value_usage));
# 1976 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CobolParser.fsy"
                                                        _2 
                   )
# 261 "CobolParser.fsy"
                 : 'datadiv_usage));
# 1987 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_pic_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "CobolParser.fsy"
                                                             _3 
                   )
# 262 "CobolParser.fsy"
                 : 'datadiv_usage));
# 1998 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "CobolParser.fsy"
                                                                         (None, ArraySize.of_uint64 _2) 
                   )
# 265 "CobolParser.fsy"
                 : 'datadiv_occurs_val));
# 2009 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_value)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "CobolParser.fsy"
                                                                       (Some _2, ArraySize.of_int 1) 
                   )
# 266 "CobolParser.fsy"
                 : 'datadiv_occurs_val));
# 2020 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_value)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "CobolParser.fsy"
                                                                         (Some _4, ArraySize.of_uint64 _2) 
                   )
# 267 "CobolParser.fsy"
                 : 'datadiv_occurs_val));
# 2032 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_value)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "CobolParser.fsy"
                                                                         (Some _2, ArraySize.of_uint64 _4) 
                   )
# 268 "CobolParser.fsy"
                 : 'datadiv_occurs_val));
# 2044 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_seq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 "CobolParser.fsy"
                                           DataDiv.Seq _1 
                   )
# 271 "CobolParser.fsy"
                 : 'datadiv_value));
# 2055 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_thrus)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "CobolParser.fsy"
                                           DataDiv.Thru _1 
                   )
# 272 "CobolParser.fsy"
                 : 'datadiv_value));
# 2066 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "CobolParser.fsy"
                                                       [_1] 
                   )
# 275 "CobolParser.fsy"
                 : 'datadiv_seq));
# 2077 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "CobolParser.fsy"
                                      [Int 0L] 
                   )
# 276 "CobolParser.fsy"
                 : 'datadiv_seq));
# 2087 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 277 "CobolParser.fsy"
                                       [String " "] 
                   )
# 277 "CobolParser.fsy"
                 : 'datadiv_seq));
# 2097 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_seq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "CobolParser.fsy"
                                                       _1 :: _2 
                   )
# 278 "CobolParser.fsy"
                 : 'datadiv_seq));
# 2109 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_seq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "CobolParser.fsy"
                                                       _1 :: _3 
                   )
# 279 "CobolParser.fsy"
                 : 'datadiv_seq));
# 2121 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "CobolParser.fsy"
                                                               (_1, _3) 
                   )
# 282 "CobolParser.fsy"
                 : 'datadiv_thru));
# 2133 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_thru)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 "CobolParser.fsy"
                                                               [_1] 
                   )
# 285 "CobolParser.fsy"
                 : 'datadiv_thrus));
# 2144 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_thru)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'datadiv_thrus)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "CobolParser.fsy"
                                                               _1 :: _3 
                   )
# 286 "CobolParser.fsy"
                 : 'datadiv_thrus));
# 2156 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 "CobolParser.fsy"
                                    Int (Convert.ToInt64 _1) 
                   )
# 289 "CobolParser.fsy"
                 : 'lit));
# 2167 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "CobolParser.fsy"
                                   Int _1 
                   )
# 290 "CobolParser.fsy"
                 : 'lit));
# 2178 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : float)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "CobolParser.fsy"
                                   Float _1 
                   )
# 291 "CobolParser.fsy"
                 : 'lit));
# 2189 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 "CobolParser.fsy"
                                    String _1 
                   )
# 292 "CobolParser.fsy"
                 : 'lit));
# 2200 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "CobolParser.fsy"
                                         
                   )
# 295 "CobolParser.fsy"
                 : 'copy_stmt));
# 2211 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'copy_target)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "CobolParser.fsy"
                                               
                   )
# 296 "CobolParser.fsy"
                 : 'copy_stmt));
# 2222 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'copy_target)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 "CobolParser.fsy"
                                                     
                   )
# 297 "CobolParser.fsy"
                 : 'copy_stmt));
# 2233 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'copy_target)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'replace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "CobolParser.fsy"
                                                     
                   )
# 298 "CobolParser.fsy"
                 : 'copy_stmt));
# 2245 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'copy_target)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'replace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 "CobolParser.fsy"
                                                           
                   )
# 299 "CobolParser.fsy"
                 : 'copy_stmt));
# 2257 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 "CobolParser.fsy"
                                                 
                   )
# 302 "CobolParser.fsy"
                 : 'replace));
# 2269 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'prep)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'prep2)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "CobolParser.fsy"
                                                     
                   )
# 305 "CobolParser.fsy"
                 : 'copy_target));
# 2284 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 308 "CobolParser.fsy"
                                     
                   )
# 308 "CobolParser.fsy"
                 : 'prep));
# 2294 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 "CobolParser.fsy"
                                        
                   )
# 309 "CobolParser.fsy"
                 : 'prep));
# 2304 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'prep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 "CobolParser.fsy"
                                      
                   )
# 312 "CobolParser.fsy"
                 : 'prep2));
# 2315 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "CobolParser.fsy"
                                        
                   )
# 313 "CobolParser.fsy"
                 : 'prep2));
# 2325 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'alphafmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 "CobolParser.fsy"
                                                       DataDiv.AlphaFormat _1 
                   )
# 320 "CobolParser.fsy"
                 :  Absyn.Cobol.DataDiv.format ));
# 2336 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 "CobolParser.fsy"
                                                       let (s, (i, d)) = _1 in DataDiv.NumFormat (s, i, d) 
                   )
# 321 "CobolParser.fsy"
                 :  Absyn.Cobol.DataDiv.format ));
# 2347 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'alphafmt_item)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 "CobolParser.fsy"
                                                       _1 
                   )
# 324 "CobolParser.fsy"
                 : 'alphafmt));
# 2358 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'alphafmt_item)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'alphafmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 "CobolParser.fsy"
                                                       _1 @ _2 
                   )
# 325 "CobolParser.fsy"
                 : 'alphafmt));
# 2370 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'alphafmt_char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 "CobolParser.fsy"
                                                       [_1] 
                   )
# 328 "CobolParser.fsy"
                 : 'alphafmt_item));
# 2381 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'alphafmt_char)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 "CobolParser.fsy"
                                                       List.init _2 (fun _ -> _1) 
                   )
# 329 "CobolParser.fsy"
                 : 'alphafmt_item));
# 2393 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 "CobolParser.fsy"
                                       DataDiv.A 
                   )
# 332 "CobolParser.fsy"
                 : 'alphafmt_char));
# 2403 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 "CobolParser.fsy"
                                       DataDiv.X 
                   )
# 333 "CobolParser.fsy"
                 : 'alphafmt_char));
# 2413 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt')) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 336 "CobolParser.fsy"
                                                           (false, _1) 
                   )
# 336 "CobolParser.fsy"
                 : 'numfmt));
# 2424 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt')) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 337 "CobolParser.fsy"
                                                           (true, _2) 
                   )
# 337 "CobolParser.fsy"
                 : 'numfmt));
# 2435 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_part)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 "CobolParser.fsy"
                                                           (_1, []) 
                   )
# 340 "CobolParser.fsy"
                 : 'numfmt'));
# 2446 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_part)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_part)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "CobolParser.fsy"
                                                           (_1, _3) 
                   )
# 341 "CobolParser.fsy"
                 : 'numfmt'));
# 2458 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_item)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 "CobolParser.fsy"
                                                                  _1 
                   )
# 344 "CobolParser.fsy"
                 : 'numfmt_part));
# 2469 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_item)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_part)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 345 "CobolParser.fsy"
                                                                  _1 @ _2 
                   )
# 345 "CobolParser.fsy"
                 : 'numfmt_part));
# 2481 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_item)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_sep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_part)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 "CobolParser.fsy"
                                                                  _1 @ _3 
                   )
# 346 "CobolParser.fsy"
                 : 'numfmt_part));
# 2494 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 "CobolParser.fsy"
                                                       [_1] 
                   )
# 349 "CobolParser.fsy"
                 : 'numfmt_item));
# 2505 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'numfmt_char)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 350 "CobolParser.fsy"
                                                       List.init _2 (fun _ -> _1) 
                   )
# 350 "CobolParser.fsy"
                 : 'numfmt_item));
# 2517 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 "CobolParser.fsy"
                                      
                   )
# 353 "CobolParser.fsy"
                 : 'numfmt_sep));
# 2527 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 "CobolParser.fsy"
                                      
                   )
# 354 "CobolParser.fsy"
                 : 'numfmt_sep));
# 2537 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 "CobolParser.fsy"
                                       DataDiv.Nine 
                   )
# 357 "CobolParser.fsy"
                 : 'numfmt_char));
# 2547 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 "CobolParser.fsy"
                                       DataDiv.Z 
                   )
# 358 "CobolParser.fsy"
                 : 'numfmt_char));
# 2557 "CobolParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 "CobolParser.fsy"
                                       DataDiv.Zero 
                   )
# 359 "CobolParser.fsy"
                 : 'numfmt_char));
|]
# 2568 "CobolParser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 94;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let datadiv_format lexer lexbuf :  Absyn.Cobol.DataDiv.format  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let program lexer lexbuf :  Absyn.Cobol.program  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
