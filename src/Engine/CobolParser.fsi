// Signature file for parser generated by fsyacc
module CobolAnalyzer.Engine.CobolParser
type token = 
  | EOF
  | OCCURS
  | VALUE
  | THRU
  | COMP
  | COMP1
  | COMP2
  | COMP3
  | PACKED_DECIMAL
  | BINARY
  | REDEFINES
  | USAGE
  | PERIOD
  | COMMA
  | DOT
  | PIC_A
  | PIC_X
  | PIC_9
  | PIC_Z
  | PIC_0
  | PIC_V
  | PIC_S
  | PIC_DOT
  | PIC_COMMA
  | ZEROS
  | SPACES
  | DIVISION
  | SECTION
  | IDENTIFICATION
  | PROGRAM_ID
  | ENVIRONMENT
  | CONFIGURATION
  | WORKING_STORAGE
  | DATA
  | SPECIAL_NAMES
  | DECIMAL_POINT
  | COMMA_KEYWORD
  | NAME
  | NAMES
  | IS
  | INPUT_OUTPUT
  | MEMBER
  | FILE_CONTROL
  | FILE
  | SELECT
  | OPTIONAL
  | ASSIGN
  | STATUS
  | RESERVE
  | AREAS
  | BUFFER
  | SIZE
  | BLOCK
  | BLOCKS
  | ORGANIZATION
  | RELATIVE
  | SEQUENTIAL
  | RANDOM
  | DYNAMIC
  | KEY
  | ACCESS
  | MODE
  | FD
  | GLOBAL
  | EXTERNAL
  | CONTAINS
  | RECORD
  | RECORDS
  | CHARACTERS
  | COMPRESSED
  | LABEL
  | STANDARD
  | OMITTED
  | ARE
  | COPY
  | OF
  | IN
  | ON
  | SUPPRESS
  | REPLACING
  | BY
  | TO
  | RECORDING
  | PROCEDURE_DIVISION_BEGINS
  | PIC_NUM of (int)
  | FLOAT of (float)
  | UINT64 of (uint64)
  | INT64 of (int64)
  | ID of (Absyn.id)
  | STRING of (string)
  | PIC of (string)
type tokenId = 
    | TOKEN_EOF
    | TOKEN_OCCURS
    | TOKEN_VALUE
    | TOKEN_THRU
    | TOKEN_COMP
    | TOKEN_COMP1
    | TOKEN_COMP2
    | TOKEN_COMP3
    | TOKEN_PACKED_DECIMAL
    | TOKEN_BINARY
    | TOKEN_REDEFINES
    | TOKEN_USAGE
    | TOKEN_PERIOD
    | TOKEN_COMMA
    | TOKEN_DOT
    | TOKEN_PIC_A
    | TOKEN_PIC_X
    | TOKEN_PIC_9
    | TOKEN_PIC_Z
    | TOKEN_PIC_0
    | TOKEN_PIC_V
    | TOKEN_PIC_S
    | TOKEN_PIC_DOT
    | TOKEN_PIC_COMMA
    | TOKEN_ZEROS
    | TOKEN_SPACES
    | TOKEN_DIVISION
    | TOKEN_SECTION
    | TOKEN_IDENTIFICATION
    | TOKEN_PROGRAM_ID
    | TOKEN_ENVIRONMENT
    | TOKEN_CONFIGURATION
    | TOKEN_WORKING_STORAGE
    | TOKEN_DATA
    | TOKEN_SPECIAL_NAMES
    | TOKEN_DECIMAL_POINT
    | TOKEN_COMMA_KEYWORD
    | TOKEN_NAME
    | TOKEN_NAMES
    | TOKEN_IS
    | TOKEN_INPUT_OUTPUT
    | TOKEN_MEMBER
    | TOKEN_FILE_CONTROL
    | TOKEN_FILE
    | TOKEN_SELECT
    | TOKEN_OPTIONAL
    | TOKEN_ASSIGN
    | TOKEN_STATUS
    | TOKEN_RESERVE
    | TOKEN_AREAS
    | TOKEN_BUFFER
    | TOKEN_SIZE
    | TOKEN_BLOCK
    | TOKEN_BLOCKS
    | TOKEN_ORGANIZATION
    | TOKEN_RELATIVE
    | TOKEN_SEQUENTIAL
    | TOKEN_RANDOM
    | TOKEN_DYNAMIC
    | TOKEN_KEY
    | TOKEN_ACCESS
    | TOKEN_MODE
    | TOKEN_FD
    | TOKEN_GLOBAL
    | TOKEN_EXTERNAL
    | TOKEN_CONTAINS
    | TOKEN_RECORD
    | TOKEN_RECORDS
    | TOKEN_CHARACTERS
    | TOKEN_COMPRESSED
    | TOKEN_LABEL
    | TOKEN_STANDARD
    | TOKEN_OMITTED
    | TOKEN_ARE
    | TOKEN_COPY
    | TOKEN_OF
    | TOKEN_IN
    | TOKEN_ON
    | TOKEN_SUPPRESS
    | TOKEN_REPLACING
    | TOKEN_BY
    | TOKEN_TO
    | TOKEN_RECORDING
    | TOKEN_PROCEDURE_DIVISION_BEGINS
    | TOKEN_PIC_NUM
    | TOKEN_FLOAT
    | TOKEN_UINT64
    | TOKEN_INT64
    | TOKEN_ID
    | TOKEN_STRING
    | TOKEN_PIC
    | TOKEN_end_of_input
    | TOKEN_error
type nonTerminalId = 
    | NONTERM__startdatadiv_format
    | NONTERM__startprogram
    | NONTERM_program
    | NONTERM_program1
    | NONTERM_iddiv
    | NONTERM_member_name
    | NONTERM_iddiv_body
    | NONTERM_envdiv
    | NONTERM_envdiv_title
    | NONTERM_envdiv_conf
    | NONTERM_envdiv_conf_title
    | NONTERM_envdiv_conf_body
    | NONTERM_envdiv_conf_options
    | NONTERM_envdiv_conf_option
    | NONTERM_special_names
    | NONTERM_special_names_body
    | NONTERM_special_name
    | NONTERM_input_output
    | NONTERM_input_output_title
    | NONTERM_input_output_body
    | NONTERM_file_ctrl
    | NONTERM_file_ctrl_title
    | NONTERM_file_ctrl_body
    | NONTERM_file_ctrl_sel
    | NONTERM_file_ctrl_sel_body
    | NONTERM_file_ctrl_options
    | NONTERM_file_ctrl_option
    | NONTERM_organization_mode
    | NONTERM_mode
    | NONTERM_datadiv
    | NONTERM_datadiv_body
    | NONTERM_file_section
    | NONTERM_files
    | NONTERM_file
    | NONTERM_file_options
    | NONTERM_file_option
    | NONTERM_n_items
    | NONTERM_fileo_items
    | NONTERM_recs
    | NONTERM_storage_section
    | NONTERM_storage_body
    | NONTERM_storage_body_item
    | NONTERM_datadiv_line
    | NONTERM_udatadiv_line
    | NONTERM_datadiv_line_def
    | NONTERM_datadiv_pic_usage
    | NONTERM_datadiv_pic_simple
    | NONTERM_datadiv_pic_qualified
    | NONTERM_datadiv_pic_qualifier
    | NONTERM_datadiv_occurs_value_usage
    | NONTERM_datadiv_usage
    | NONTERM_datadiv_occurs_val
    | NONTERM_datadiv_value
    | NONTERM_datadiv_seq
    | NONTERM_datadiv_thru
    | NONTERM_datadiv_thrus
    | NONTERM_lit
    | NONTERM_copy_stmt
    | NONTERM_replace
    | NONTERM_copy_target
    | NONTERM_prep
    | NONTERM_prep2
    | NONTERM_datadiv_format
    | NONTERM_alphafmt
    | NONTERM_alphafmt_item
    | NONTERM_alphafmt_char
    | NONTERM_numfmt
    | NONTERM_numfmt'
    | NONTERM_numfmt_part
    | NONTERM_numfmt_item
    | NONTERM_numfmt_sep
    | NONTERM_numfmt_char
/// This function maps integers indexes to symbolic token ids
val tagOfToken: token -> int

/// This function maps integers indexes to symbolic token ids
val tokenTagToTokenId: int -> tokenId

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
val prodIdxToNonTerminal: int -> nonTerminalId

/// This function gets the name of a token as a string
val token_to_string: token -> string
val datadiv_format : (Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> token) -> Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> ( Absyn.Cobol.DataDiv.format ) 
val program : (Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> token) -> Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> ( Absyn.Cobol.program ) 
