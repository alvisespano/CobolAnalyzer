// Implementation file for parser generated by fsyacc
module CobolAnalyzer.Engine.IdealParser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 2 "IdealParser.fsy"


#light "on"

open System
open Absyn
open Absyn.Ideal
open ParseTrans
open Prelude

let parse_error_rich = Some (fun ctx -> raise (ParseErrorContext ctx))

let numformat_of_ufloat x =
    let s = sprintf "%g" x
    in
        match s.Split [|'.'|] with
            [|n; d|] -> (FormatSize.parse n, FormatSize.parse d)
          | a        -> unexpected "float '%g' split to tokens [|%s|]" x (flatten_strings "; " a)


# 27 "IdealParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | BRA
  | KET
  | SQBRA
  | SQKET
  | CURBRA
  | CURKET
  | SIGNED
  | ALPHA
  | ALPHANUM
  | NUM
  | ARRAY
  | NUMBCD
  | NUMONEPERBYTE
  | NUMINT16
  | NUMINT32
  | NUMINT64
  | NUMFLOAT32
  | NUMFLOAT64
  | COLON
  | SEMICOLON
  | COMMA
  | ASSIGN
  | DOT
  | PLUS
  | MINUS
  | MULT
  | DIV
  | MOD
  | NOT
  | AND
  | OR
  | EQ
  | LT
  | GT
  | LEQ
  | GEQ
  | NEQ
  | IF
  | THEN
  | ELSE
  | PROC
  | TRUE
  | FALSE
  | REF
  | VAL
  | WHERE
  | GOTO
  | RETURN
  | PERFORM
  | EOF
  | SIGNEDFMT of (Absyn.FormatSize.t)
  | FLOAT of (float)
  | UFLOAT of (float)
  | UINT64 of (uint64)
  | INT64 of (int64)
  | ID of (Absyn.id)
  | STRING of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_SQBRA
    | TOKEN_SQKET
    | TOKEN_CURBRA
    | TOKEN_CURKET
    | TOKEN_SIGNED
    | TOKEN_ALPHA
    | TOKEN_ALPHANUM
    | TOKEN_NUM
    | TOKEN_ARRAY
    | TOKEN_NUMBCD
    | TOKEN_NUMONEPERBYTE
    | TOKEN_NUMINT16
    | TOKEN_NUMINT32
    | TOKEN_NUMINT64
    | TOKEN_NUMFLOAT32
    | TOKEN_NUMFLOAT64
    | TOKEN_COLON
    | TOKEN_SEMICOLON
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_DOT
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_MULT
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_NOT
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_EQ
    | TOKEN_LT
    | TOKEN_GT
    | TOKEN_LEQ
    | TOKEN_GEQ
    | TOKEN_NEQ
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_PROC
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_REF
    | TOKEN_VAL
    | TOKEN_WHERE
    | TOKEN_GOTO
    | TOKEN_RETURN
    | TOKEN_PERFORM
    | TOKEN_EOF
    | TOKEN_SIGNEDFMT
    | TOKEN_FLOAT
    | TOKEN_UFLOAT
    | TOKEN_UINT64
    | TOKEN_INT64
    | TOKEN_ID
    | TOKEN_STRING
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startprogram
    | NONTERM_sep
    | NONTERM_program
    | NONTERM_lit
    | NONTERM_id
    | NONTERM_expr
    | NONTERM_lvalue
    | NONTERM_actual
    | NONTERM_actuals
    | NONTERM_paragraph_id
    | NONTERM_statement
    | NONTERM_statement'
    | NONTERM_statements
    | NONTERM_block
    | NONTERM_body
    | NONTERM_proc
    | NONTERM_procs
    | NONTERM_ty_bindings
    | NONTERM_ty_binding
    | NONTERM_const_value
    | NONTERM_const_value_seq
    | NONTERM_env_binding
    | NONTERM_env_bindings
    | NONTERM_proc_args
    | NONTERM_pic
    | NONTERM_num
    | NONTERM_num_qual
    | NONTERM_num_fmt
    | NONTERM_plain_num_fmt
    | NONTERM_size_fmt
    | NONTERM_array_fmt

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | BRA  -> 0 
  | KET  -> 1 
  | SQBRA  -> 2 
  | SQKET  -> 3 
  | CURBRA  -> 4 
  | CURKET  -> 5 
  | SIGNED  -> 6 
  | ALPHA  -> 7 
  | ALPHANUM  -> 8 
  | NUM  -> 9 
  | ARRAY  -> 10 
  | NUMBCD  -> 11 
  | NUMONEPERBYTE  -> 12 
  | NUMINT16  -> 13 
  | NUMINT32  -> 14 
  | NUMINT64  -> 15 
  | NUMFLOAT32  -> 16 
  | NUMFLOAT64  -> 17 
  | COLON  -> 18 
  | SEMICOLON  -> 19 
  | COMMA  -> 20 
  | ASSIGN  -> 21 
  | DOT  -> 22 
  | PLUS  -> 23 
  | MINUS  -> 24 
  | MULT  -> 25 
  | DIV  -> 26 
  | MOD  -> 27 
  | NOT  -> 28 
  | AND  -> 29 
  | OR  -> 30 
  | EQ  -> 31 
  | LT  -> 32 
  | GT  -> 33 
  | LEQ  -> 34 
  | GEQ  -> 35 
  | NEQ  -> 36 
  | IF  -> 37 
  | THEN  -> 38 
  | ELSE  -> 39 
  | PROC  -> 40 
  | TRUE  -> 41 
  | FALSE  -> 42 
  | REF  -> 43 
  | VAL  -> 44 
  | WHERE  -> 45 
  | GOTO  -> 46 
  | RETURN  -> 47 
  | PERFORM  -> 48 
  | EOF  -> 49 
  | SIGNEDFMT _ -> 50 
  | FLOAT _ -> 51 
  | UFLOAT _ -> 52 
  | UINT64 _ -> 53 
  | INT64 _ -> 54 
  | ID _ -> 55 
  | STRING _ -> 56 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_BRA 
  | 1 -> TOKEN_KET 
  | 2 -> TOKEN_SQBRA 
  | 3 -> TOKEN_SQKET 
  | 4 -> TOKEN_CURBRA 
  | 5 -> TOKEN_CURKET 
  | 6 -> TOKEN_SIGNED 
  | 7 -> TOKEN_ALPHA 
  | 8 -> TOKEN_ALPHANUM 
  | 9 -> TOKEN_NUM 
  | 10 -> TOKEN_ARRAY 
  | 11 -> TOKEN_NUMBCD 
  | 12 -> TOKEN_NUMONEPERBYTE 
  | 13 -> TOKEN_NUMINT16 
  | 14 -> TOKEN_NUMINT32 
  | 15 -> TOKEN_NUMINT64 
  | 16 -> TOKEN_NUMFLOAT32 
  | 17 -> TOKEN_NUMFLOAT64 
  | 18 -> TOKEN_COLON 
  | 19 -> TOKEN_SEMICOLON 
  | 20 -> TOKEN_COMMA 
  | 21 -> TOKEN_ASSIGN 
  | 22 -> TOKEN_DOT 
  | 23 -> TOKEN_PLUS 
  | 24 -> TOKEN_MINUS 
  | 25 -> TOKEN_MULT 
  | 26 -> TOKEN_DIV 
  | 27 -> TOKEN_MOD 
  | 28 -> TOKEN_NOT 
  | 29 -> TOKEN_AND 
  | 30 -> TOKEN_OR 
  | 31 -> TOKEN_EQ 
  | 32 -> TOKEN_LT 
  | 33 -> TOKEN_GT 
  | 34 -> TOKEN_LEQ 
  | 35 -> TOKEN_GEQ 
  | 36 -> TOKEN_NEQ 
  | 37 -> TOKEN_IF 
  | 38 -> TOKEN_THEN 
  | 39 -> TOKEN_ELSE 
  | 40 -> TOKEN_PROC 
  | 41 -> TOKEN_TRUE 
  | 42 -> TOKEN_FALSE 
  | 43 -> TOKEN_REF 
  | 44 -> TOKEN_VAL 
  | 45 -> TOKEN_WHERE 
  | 46 -> TOKEN_GOTO 
  | 47 -> TOKEN_RETURN 
  | 48 -> TOKEN_PERFORM 
  | 49 -> TOKEN_EOF 
  | 50 -> TOKEN_SIGNEDFMT 
  | 51 -> TOKEN_FLOAT 
  | 52 -> TOKEN_UFLOAT 
  | 53 -> TOKEN_UINT64 
  | 54 -> TOKEN_INT64 
  | 55 -> TOKEN_ID 
  | 56 -> TOKEN_STRING 
  | 59 -> TOKEN_end_of_input
  | 57 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startprogram 
    | 1 -> NONTERM_sep 
    | 2 -> NONTERM_sep 
    | 3 -> NONTERM_program 
    | 4 -> NONTERM_program 
    | 5 -> NONTERM_lit 
    | 6 -> NONTERM_lit 
    | 7 -> NONTERM_lit 
    | 8 -> NONTERM_lit 
    | 9 -> NONTERM_lit 
    | 10 -> NONTERM_lit 
    | 11 -> NONTERM_lit 
    | 12 -> NONTERM_id 
    | 13 -> NONTERM_id 
    | 14 -> NONTERM_id 
    | 15 -> NONTERM_expr 
    | 16 -> NONTERM_expr 
    | 17 -> NONTERM_expr 
    | 18 -> NONTERM_expr 
    | 19 -> NONTERM_expr 
    | 20 -> NONTERM_expr 
    | 21 -> NONTERM_expr 
    | 22 -> NONTERM_expr 
    | 23 -> NONTERM_expr 
    | 24 -> NONTERM_expr 
    | 25 -> NONTERM_expr 
    | 26 -> NONTERM_expr 
    | 27 -> NONTERM_expr 
    | 28 -> NONTERM_expr 
    | 29 -> NONTERM_expr 
    | 30 -> NONTERM_expr 
    | 31 -> NONTERM_expr 
    | 32 -> NONTERM_expr 
    | 33 -> NONTERM_lvalue 
    | 34 -> NONTERM_lvalue 
    | 35 -> NONTERM_lvalue 
    | 36 -> NONTERM_actual 
    | 37 -> NONTERM_actual 
    | 38 -> NONTERM_actual 
    | 39 -> NONTERM_actuals 
    | 40 -> NONTERM_actuals 
    | 41 -> NONTERM_actuals 
    | 42 -> NONTERM_actuals 
    | 43 -> NONTERM_paragraph_id 
    | 44 -> NONTERM_paragraph_id 
    | 45 -> NONTERM_statement 
    | 46 -> NONTERM_statement' 
    | 47 -> NONTERM_statement' 
    | 48 -> NONTERM_statement' 
    | 49 -> NONTERM_statement' 
    | 50 -> NONTERM_statement' 
    | 51 -> NONTERM_statement' 
    | 52 -> NONTERM_statement' 
    | 53 -> NONTERM_statement' 
    | 54 -> NONTERM_statement' 
    | 55 -> NONTERM_statements 
    | 56 -> NONTERM_statements 
    | 57 -> NONTERM_block 
    | 58 -> NONTERM_block 
    | 59 -> NONTERM_body 
    | 60 -> NONTERM_body 
    | 61 -> NONTERM_proc 
    | 62 -> NONTERM_proc 
    | 63 -> NONTERM_procs 
    | 64 -> NONTERM_procs 
    | 65 -> NONTERM_ty_bindings 
    | 66 -> NONTERM_ty_bindings 
    | 67 -> NONTERM_ty_bindings 
    | 68 -> NONTERM_ty_bindings 
    | 69 -> NONTERM_ty_binding 
    | 70 -> NONTERM_ty_binding 
    | 71 -> NONTERM_const_value 
    | 72 -> NONTERM_const_value 
    | 73 -> NONTERM_const_value_seq 
    | 74 -> NONTERM_const_value_seq 
    | 75 -> NONTERM_const_value_seq 
    | 76 -> NONTERM_env_binding 
    | 77 -> NONTERM_env_bindings 
    | 78 -> NONTERM_proc_args 
    | 79 -> NONTERM_pic 
    | 80 -> NONTERM_pic 
    | 81 -> NONTERM_pic 
    | 82 -> NONTERM_pic 
    | 83 -> NONTERM_pic 
    | 84 -> NONTERM_num 
    | 85 -> NONTERM_num 
    | 86 -> NONTERM_num 
    | 87 -> NONTERM_num_qual 
    | 88 -> NONTERM_num_qual 
    | 89 -> NONTERM_num_qual 
    | 90 -> NONTERM_num_qual 
    | 91 -> NONTERM_num_qual 
    | 92 -> NONTERM_num_qual 
    | 93 -> NONTERM_num_qual 
    | 94 -> NONTERM_num_fmt 
    | 95 -> NONTERM_num_fmt 
    | 96 -> NONTERM_num_fmt 
    | 97 -> NONTERM_num_fmt 
    | 98 -> NONTERM_plain_num_fmt 
    | 99 -> NONTERM_plain_num_fmt 
    | 100 -> NONTERM_plain_num_fmt 
    | 101 -> NONTERM_plain_num_fmt 
    | 102 -> NONTERM_size_fmt 
    | 103 -> NONTERM_array_fmt 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 59 
let _fsyacc_tagOfErrorTerminal = 57

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | BRA  -> "BRA" 
  | KET  -> "KET" 
  | SQBRA  -> "SQBRA" 
  | SQKET  -> "SQKET" 
  | CURBRA  -> "CURBRA" 
  | CURKET  -> "CURKET" 
  | SIGNED  -> "SIGNED" 
  | ALPHA  -> "ALPHA" 
  | ALPHANUM  -> "ALPHANUM" 
  | NUM  -> "NUM" 
  | ARRAY  -> "ARRAY" 
  | NUMBCD  -> "NUMBCD" 
  | NUMONEPERBYTE  -> "NUMONEPERBYTE" 
  | NUMINT16  -> "NUMINT16" 
  | NUMINT32  -> "NUMINT32" 
  | NUMINT64  -> "NUMINT64" 
  | NUMFLOAT32  -> "NUMFLOAT32" 
  | NUMFLOAT64  -> "NUMFLOAT64" 
  | COLON  -> "COLON" 
  | SEMICOLON  -> "SEMICOLON" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | DOT  -> "DOT" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | MULT  -> "MULT" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | NOT  -> "NOT" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | EQ  -> "EQ" 
  | LT  -> "LT" 
  | GT  -> "GT" 
  | LEQ  -> "LEQ" 
  | GEQ  -> "GEQ" 
  | NEQ  -> "NEQ" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | PROC  -> "PROC" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | REF  -> "REF" 
  | VAL  -> "VAL" 
  | WHERE  -> "WHERE" 
  | GOTO  -> "GOTO" 
  | RETURN  -> "RETURN" 
  | PERFORM  -> "PERFORM" 
  | EOF  -> "EOF" 
  | SIGNEDFMT _ -> "SIGNEDFMT" 
  | FLOAT _ -> "FLOAT" 
  | UFLOAT _ -> "UFLOAT" 
  | UINT64 _ -> "UINT64" 
  | INT64 _ -> "INT64" 
  | ID _ -> "ID" 
  | STRING _ -> "STRING" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | BRA  -> (null : System.Object) 
  | KET  -> (null : System.Object) 
  | SQBRA  -> (null : System.Object) 
  | SQKET  -> (null : System.Object) 
  | CURBRA  -> (null : System.Object) 
  | CURKET  -> (null : System.Object) 
  | SIGNED  -> (null : System.Object) 
  | ALPHA  -> (null : System.Object) 
  | ALPHANUM  -> (null : System.Object) 
  | NUM  -> (null : System.Object) 
  | ARRAY  -> (null : System.Object) 
  | NUMBCD  -> (null : System.Object) 
  | NUMONEPERBYTE  -> (null : System.Object) 
  | NUMINT16  -> (null : System.Object) 
  | NUMINT32  -> (null : System.Object) 
  | NUMINT64  -> (null : System.Object) 
  | NUMFLOAT32  -> (null : System.Object) 
  | NUMFLOAT64  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | MULT  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | PROC  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | WHERE  -> (null : System.Object) 
  | GOTO  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | PERFORM  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | SIGNEDFMT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 3us; 65535us; 70us; 71us; 116us; 117us; 129us; 130us; 1us; 65535us; 0us; 1us; 26us; 65535us; 41us; 56us; 42us; 56us; 43us; 56us; 44us; 56us; 45us; 56us; 46us; 56us; 47us; 56us; 48us; 56us; 49us; 56us; 50us; 56us; 51us; 56us; 52us; 56us; 53us; 56us; 54us; 56us; 55us; 56us; 58us; 56us; 64us; 56us; 68us; 56us; 70us; 56us; 71us; 56us; 77us; 56us; 78us; 56us; 83us; 56us; 123us; 125us; 126us; 129us; 130us; 129us; 41us; 65535us; 0us; 61us; 6us; 61us; 41us; 60us; 42us; 60us; 43us; 60us; 44us; 60us; 45us; 60us; 46us; 60us; 47us; 60us; 48us; 60us; 49us; 60us; 50us; 60us; 51us; 60us; 52us; 60us; 53us; 60us; 54us; 60us; 55us; 60us; 58us; 60us; 64us; 60us; 66us; 67us; 68us; 60us; 69us; 60us; 70us; 60us; 71us; 60us; 77us; 60us; 78us; 60us; 79us; 61us; 81us; 61us; 83us; 60us; 87us; 88us; 94us; 61us; 97us; 61us; 100us; 61us; 104us; 120us; 106us; 107us; 108us; 120us; 109us; 61us; 112us; 61us; 116us; 120us; 117us; 120us; 143us; 120us; 23us; 65535us; 41us; 20us; 42us; 21us; 43us; 22us; 44us; 23us; 45us; 24us; 46us; 25us; 47us; 26us; 48us; 27us; 49us; 28us; 50us; 29us; 51us; 30us; 52us; 31us; 53us; 32us; 54us; 33us; 55us; 34us; 58us; 35us; 64us; 36us; 68us; 38us; 70us; 37us; 71us; 37us; 77us; 39us; 78us; 40us; 83us; 37us; 33us; 65535us; 0us; 63us; 6us; 63us; 41us; 57us; 42us; 57us; 43us; 57us; 44us; 57us; 45us; 57us; 46us; 57us; 47us; 57us; 48us; 57us; 49us; 57us; 50us; 57us; 51us; 57us; 52us; 57us; 53us; 57us; 54us; 57us; 55us; 57us; 58us; 57us; 64us; 57us; 68us; 57us; 69us; 62us; 70us; 57us; 71us; 57us; 77us; 57us; 78us; 57us; 79us; 63us; 81us; 63us; 83us; 57us; 94us; 63us; 97us; 63us; 100us; 63us; 109us; 63us; 112us; 63us; 3us; 65535us; 70us; 70us; 71us; 70us; 83us; 70us; 3us; 65535us; 70us; 73us; 71us; 72us; 83us; 85us; 1us; 65535us; 91us; 92us; 9us; 65535us; 0us; 103us; 6us; 103us; 79us; 80us; 81us; 82us; 94us; 93us; 97us; 93us; 100us; 93us; 109us; 103us; 112us; 103us; 9us; 65535us; 0us; 76us; 6us; 76us; 79us; 76us; 81us; 76us; 94us; 76us; 97us; 76us; 100us; 76us; 109us; 76us; 112us; 76us; 3us; 65535us; 94us; 95us; 97us; 98us; 100us; 101us; 9us; 65535us; 0us; 90us; 6us; 90us; 79us; 90us; 81us; 90us; 94us; 90us; 97us; 90us; 100us; 90us; 109us; 90us; 112us; 90us; 4us; 65535us; 0us; 4us; 6us; 7us; 109us; 110us; 112us; 113us; 2us; 65535us; 0us; 114us; 114us; 114us; 2us; 65535us; 0us; 6us; 114us; 115us; 5us; 65535us; 104us; 133us; 108us; 134us; 116us; 133us; 117us; 133us; 143us; 144us; 5us; 65535us; 104us; 132us; 108us; 132us; 116us; 132us; 117us; 132us; 143us; 132us; 1us; 65535us; 123us; 124us; 2us; 65535us; 126us; 127us; 130us; 131us; 5us; 65535us; 104us; 116us; 108us; 116us; 116us; 116us; 117us; 116us; 143us; 116us; 3us; 65535us; 104us; 105us; 116us; 119us; 117us; 118us; 1us; 65535us; 108us; 111us; 1us; 65535us; 121us; 122us; 1us; 65535us; 121us; 135us; 2us; 65535us; 121us; 151us; 149us; 150us; 1us; 65535us; 136us; 137us; 2us; 65535us; 136us; 159us; 160us; 161us; 2us; 65535us; 139us; 140us; 141us; 142us; 1us; 65535us; 146us; 147us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 5us; 7us; 34us; 76us; 100us; 134us; 138us; 142us; 144us; 154us; 164us; 168us; 178us; 183us; 186us; 189us; 195us; 201us; 203us; 206us; 212us; 216us; 218us; 220us; 222us; 225us; 227us; 230us; 233us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 2us; 12us; 57us; 1us; 13us; 1us; 14us; 14us; 15us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 22us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 23us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 24us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 25us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 26us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 27us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 28us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 29us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 32us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 34us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 36us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 37us; 14us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 46us; 15us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 23us; 24us; 25us; 26us; 27us; 47us; 48us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 30us; 3us; 31us; 34us; 35us; 1us; 32us; 1us; 32us; 1us; 33us; 3us; 33us; 49us; 50us; 3us; 34us; 35us; 38us; 3us; 34us; 35us; 46us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 37us; 1us; 38us; 4us; 39us; 40us; 41us; 42us; 2us; 40us; 41us; 1us; 41us; 1us; 42us; 2us; 43us; 44us; 1us; 44us; 1us; 45us; 1us; 46us; 2us; 47us; 48us; 2us; 47us; 48us; 2us; 47us; 48us; 1us; 48us; 1us; 48us; 2us; 49us; 50us; 1us; 49us; 1us; 50us; 1us; 50us; 1us; 51us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 54us; 2us; 55us; 56us; 2us; 55us; 56us; 1us; 56us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 58us; 1us; 58us; 1us; 58us; 2us; 59us; 60us; 1us; 60us; 1us; 60us; 2us; 61us; 62us; 2us; 61us; 62us; 2us; 61us; 62us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 62us; 2us; 63us; 64us; 1us; 64us; 4us; 65us; 66us; 67us; 68us; 2us; 66us; 67us; 1us; 67us; 1us; 68us; 2us; 69us; 70us; 2us; 69us; 70us; 3us; 69us; 70us; 83us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 3us; 73us; 74us; 75us; 2us; 74us; 75us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 83us; 2us; 84us; 85us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 95us; 2us; 96us; 97us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 1us; 99us; 1us; 99us; 1us; 100us; 1us; 100us; 1us; 101us; 1us; 102us; 1us; 102us; 1us; 102us; 1us; 103us; 1us; 103us; 1us; 103us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 34us; 37us; 39us; 41us; 56us; 71us; 86us; 101us; 116us; 131us; 146us; 161us; 176us; 191us; 206us; 221us; 236us; 251us; 266us; 281us; 296us; 311us; 326us; 341us; 357us; 359us; 361us; 363us; 365us; 367us; 369us; 371us; 373us; 375us; 377us; 379us; 381us; 383us; 385us; 387us; 389us; 393us; 395us; 397us; 399us; 403us; 407us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 428us; 431us; 433us; 435us; 438us; 440us; 442us; 444us; 447us; 450us; 453us; 455us; 457us; 460us; 462us; 464us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 481us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 503us; 505us; 507us; 510us; 513us; 516us; 518us; 520us; 522us; 524us; 526us; 529us; 531us; 536us; 539us; 541us; 543us; 546us; 549us; 553us; 555us; 557us; 559us; 561us; 563us; 565us; 569us; 572us; 574us; 576us; 578us; 580us; 582us; 584us; 586us; 588us; 590us; 592us; 594us; 596us; 598us; 600us; 602us; 604us; 606us; 609us; 611us; 613us; 615us; 617us; 619us; 621us; 623us; 625us; 627us; 629us; 631us; 633us; 635us; 638us; 640us; 642us; 645us; 647us; 649us; 651us; 653us; 655us; 657us; 659us; 661us; 663us; 665us; |]
let _fsyacc_action_rows = 177
let _fsyacc_actionTableElements = [|9us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 40us; 106us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 0us; 49152us; 0us; 16385us; 0us; 16386us; 1us; 32768us; 49us; 5us; 0us; 16387us; 8us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 1us; 32768us; 49us; 8us; 0us; 16388us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 1us; 16396us; 18us; 96us; 0us; 16397us; 0us; 16398us; 3us; 16399us; 25us; 43us; 26us; 44us; 27us; 45us; 3us; 16400us; 25us; 43us; 26us; 44us; 27us; 45us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 5us; 16404us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 5us; 16405us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 5us; 16406us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 5us; 16407us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 5us; 16408us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 5us; 16409us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 11us; 16410us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 11us; 16411us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 11us; 16412us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 0us; 16413us; 14us; 32768us; 1us; 59us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 29us; 52us; 30us; 53us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 14us; 32768us; 3us; 65us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 29us; 52us; 30us; 53us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 13us; 16420us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 29us; 52us; 30us; 53us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 13us; 16421us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 29us; 52us; 30us; 53us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 13us; 16430us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 29us; 52us; 30us; 53us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 14us; 32768us; 23us; 41us; 24us; 42us; 25us; 43us; 26us; 44us; 27us; 45us; 29us; 52us; 30us; 53us; 31us; 46us; 32us; 48us; 33us; 49us; 34us; 50us; 35us; 51us; 36us; 47us; 38us; 79us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 0us; 16414us; 2us; 16415us; 2us; 64us; 22us; 66us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 0us; 16416us; 0us; 16417us; 1us; 16417us; 0us; 83us; 2us; 16422us; 2us; 64us; 22us; 66us; 3us; 32768us; 2us; 64us; 21us; 77us; 22us; 66us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 0us; 16418us; 3us; 32768us; 6us; 18us; 50us; 19us; 55us; 16us; 0us; 16419us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 3us; 32768us; 6us; 18us; 50us; 19us; 55us; 16us; 17us; 16423us; 0us; 58us; 6us; 18us; 19us; 3us; 20us; 2us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 43us; 69us; 44us; 68us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 15us; 16424us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 43us; 69us; 44us; 68us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 0us; 16425us; 0us; 16426us; 1us; 16427us; 55us; 75us; 0us; 16428us; 0us; 16429us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 13us; 32768us; 0us; 58us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 8us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 1us; 16431us; 39us; 81us; 8us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 0us; 16432us; 16us; 32768us; 0us; 58us; 1us; 84us; 6us; 18us; 24us; 55us; 28us; 54us; 41us; 13us; 42us; 14us; 43us; 69us; 44us; 68us; 50us; 19us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 55us; 16us; 56us; 15us; 0us; 16433us; 1us; 32768us; 1us; 86us; 0us; 16434us; 3us; 32768us; 6us; 18us; 50us; 19us; 55us; 16us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 1us; 32768us; 55us; 74us; 0us; 16438us; 1us; 32768us; 19us; 94us; 8us; 16439us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 0us; 16440us; 1us; 32768us; 4us; 97us; 8us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 1us; 32768us; 5us; 99us; 0us; 16441us; 8us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 1us; 32768us; 5us; 102us; 0us; 16442us; 1us; 16443us; 45us; 104us; 3us; 32768us; 6us; 18us; 50us; 19us; 55us; 16us; 0us; 16444us; 3us; 32768us; 6us; 18us; 50us; 19us; 55us; 16us; 1us; 32768us; 0us; 108us; 4us; 32768us; 1us; 109us; 6us; 18us; 50us; 19us; 55us; 16us; 8us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 0us; 16445us; 1us; 32768us; 1us; 112us; 8us; 32768us; 4us; 100us; 6us; 18us; 37us; 78us; 46us; 87us; 47us; 89us; 48us; 91us; 50us; 19us; 55us; 17us; 0us; 16446us; 1us; 16447us; 40us; 106us; 0us; 16448us; 5us; 16449us; 6us; 18us; 19us; 3us; 20us; 2us; 50us; 19us; 55us; 16us; 3us; 16450us; 6us; 18us; 50us; 19us; 55us; 16us; 0us; 16451us; 0us; 16452us; 1us; 32768us; 18us; 121us; 11us; 32768us; 4us; 143us; 7us; 139us; 8us; 141us; 9us; 148us; 11us; 152us; 12us; 153us; 13us; 154us; 14us; 155us; 15us; 156us; 16us; 157us; 17us; 158us; 2us; 16453us; 10us; 146us; 21us; 123us; 8us; 32768us; 2us; 126us; 41us; 13us; 42us; 14us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 56us; 15us; 0us; 16454us; 0us; 16455us; 7us; 32768us; 41us; 13us; 42us; 14us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 56us; 15us; 1us; 32768us; 3us; 128us; 0us; 16456us; 2us; 16457us; 19us; 3us; 20us; 2us; 7us; 16458us; 41us; 13us; 42us; 14us; 51us; 11us; 52us; 12us; 53us; 9us; 54us; 10us; 56us; 15us; 0us; 16459us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 1us; 32768us; 2us; 136us; 5us; 32768us; 6us; 160us; 22us; 168us; 50us; 162us; 52us; 170us; 53us; 165us; 1us; 32768us; 3us; 138us; 0us; 16463us; 1us; 32768us; 2us; 171us; 0us; 16464us; 1us; 32768us; 2us; 171us; 0us; 16465us; 3us; 32768us; 6us; 18us; 50us; 19us; 55us; 16us; 1us; 32768us; 5us; 145us; 0us; 16466us; 1us; 32768us; 2us; 174us; 0us; 16467us; 1us; 16468us; 22us; 149us; 7us; 32768us; 11us; 152us; 12us; 153us; 13us; 154us; 14us; 155us; 15us; 156us; 16us; 157us; 17us; 158us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 3us; 32768us; 22us; 168us; 52us; 170us; 53us; 165us; 0us; 16479us; 1us; 16480us; 22us; 163us; 1us; 32768us; 53us; 164us; 0us; 16481us; 1us; 16482us; 22us; 166us; 1us; 32768us; 53us; 167us; 0us; 16483us; 1us; 32768us; 53us; 169us; 0us; 16484us; 0us; 16485us; 1us; 32768us; 53us; 172us; 1us; 32768us; 3us; 173us; 0us; 16486us; 1us; 32768us; 53us; 175us; 1us; 32768us; 3us; 176us; 0us; 16487us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 10us; 11us; 12us; 13us; 15us; 16us; 25us; 27us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 36us; 38us; 39us; 40us; 44us; 48us; 49us; 50us; 51us; 57us; 63us; 69us; 75us; 81us; 87us; 99us; 111us; 123us; 124us; 139us; 154us; 168us; 182us; 196us; 211us; 225us; 239us; 253us; 267us; 281us; 295us; 309us; 323us; 337us; 351us; 365us; 379us; 393us; 407us; 421us; 422us; 425us; 439us; 440us; 441us; 443us; 446us; 450us; 464us; 465us; 469us; 470us; 484us; 488us; 506us; 522us; 523us; 524us; 526us; 527us; 528us; 542us; 556us; 565us; 567us; 576us; 577us; 594us; 595us; 597us; 598us; 602us; 603us; 604us; 605us; 607us; 608us; 610us; 619us; 620us; 622us; 631us; 633us; 634us; 643us; 645us; 646us; 648us; 652us; 653us; 657us; 659us; 664us; 673us; 674us; 676us; 685us; 686us; 688us; 689us; 695us; 699us; 700us; 701us; 703us; 715us; 718us; 727us; 728us; 729us; 737us; 739us; 740us; 743us; 751us; 752us; 753us; 754us; 755us; 757us; 763us; 765us; 766us; 768us; 769us; 771us; 772us; 776us; 778us; 779us; 781us; 782us; 784us; 792us; 793us; 794us; 795us; 796us; 797us; 798us; 799us; 800us; 801us; 802us; 806us; 807us; 809us; 811us; 812us; 814us; 816us; 817us; 819us; 820us; 821us; 823us; 825us; 826us; 828us; 830us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 3us; 1us; 4us; 3us; 1us; 2us; 2us; 1us; 2us; 3us; 2us; 1us; 2us; 1us; 3us; 4us; 6us; 3us; 4us; 2us; 1us; 1us; 2us; 2us; 3us; 5us; 3us; 1us; 3us; 5us; 6us; 1us; 2us; 1us; 2us; 3us; 2us; 3us; 5us; 1us; 3us; 1us; 2us; 3us; 1us; 1us; 1us; 4us; 2us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 1us; 3us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 6us; 7us; 7us; 7us; 8us; 8us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 14us; 14us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 22us; 23us; 24us; 24us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 27us; 27us; 27us; 28us; 28us; 28us; 28us; 29us; 30us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 16386us; 65535us; 16387us; 65535us; 65535us; 16388us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 16395us; 16396us; 65535us; 16397us; 16398us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 16416us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 16425us; 16426us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 16433us; 65535us; 16434us; 65535us; 16435us; 16436us; 16437us; 65535us; 16438us; 65535us; 65535us; 16440us; 65535us; 65535us; 65535us; 16441us; 65535us; 65535us; 16442us; 65535us; 65535us; 16444us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 16448us; 65535us; 65535us; 16451us; 16452us; 65535us; 65535us; 65535us; 65535us; 16454us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16459us; 16460us; 16461us; 16462us; 65535us; 65535us; 65535us; 16463us; 65535us; 16464us; 65535us; 16465us; 65535us; 65535us; 16466us; 65535us; 16467us; 65535us; 65535us; 16469us; 16470us; 16471us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 16478us; 65535us; 16479us; 65535us; 65535us; 16481us; 65535us; 65535us; 16483us; 65535us; 16484us; 16485us; 65535us; 65535us; 16486us; 65535us; 65535us; 16487us; |]
let _fsyacc_reductions ()  =    [| 
# 551 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  Absyn.Ideal.program )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startprogram));
# 560 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "IdealParser.fsy"
                                                      
                   )
# 55 "IdealParser.fsy"
                 : 'sep));
# 570 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "IdealParser.fsy"
                                                      
                   )
# 56 "IdealParser.fsy"
                 : 'sep));
# 580 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "IdealParser.fsy"
                                           { procs = []; main = _1 } 
                   )
# 60 "IdealParser.fsy"
                 :  Absyn.Ideal.program ));
# 591 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'procs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "IdealParser.fsy"
                                                   { procs = _1; main = _2 } 
                   )
# 61 "IdealParser.fsy"
                 :  Absyn.Ideal.program ));
# 603 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "IdealParser.fsy"
                                    Int (Convert.ToInt64 _1) 
                   )
# 64 "IdealParser.fsy"
                 : 'lit));
# 614 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "IdealParser.fsy"
                                      Int _1 
                   )
# 65 "IdealParser.fsy"
                 : 'lit));
# 625 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : float)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "IdealParser.fsy"
                                               Float _1 
                   )
# 66 "IdealParser.fsy"
                 : 'lit));
# 636 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : float)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "IdealParser.fsy"
                                                Float _1 
                   )
# 67 "IdealParser.fsy"
                 : 'lit));
# 647 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "IdealParser.fsy"
                                     True 
                   )
# 68 "IdealParser.fsy"
                 : 'lit));
# 657 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "IdealParser.fsy"
                                      False 
                   )
# 69 "IdealParser.fsy"
                 : 'lit));
# 667 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "IdealParser.fsy"
                                       String _1 
                   )
# 70 "IdealParser.fsy"
                 : 'lit));
# 678 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "IdealParser.fsy"
                                 _1 
                   )
# 73 "IdealParser.fsy"
                 : 'id));
# 689 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "IdealParser.fsy"
                                       "S" 
                   )
# 74 "IdealParser.fsy"
                 : 'id));
# 699 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.FormatSize.t)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "IdealParser.fsy"
                                                       sprintf "S%d" _1 
                   )
# 75 "IdealParser.fsy"
                 : 'id));
# 710 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "IdealParser.fsy"
                                             BinOp (_1, ArithBinOp Plus, _3) 
                   )
# 78 "IdealParser.fsy"
                 : 'expr));
# 722 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "IdealParser.fsy"
                                              BinOp (_1, ArithBinOp Minus, _3) 
                   )
# 79 "IdealParser.fsy"
                 : 'expr));
# 734 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "IdealParser.fsy"
                                             BinOp (_1, ArithBinOp Mult, _3) 
                   )
# 80 "IdealParser.fsy"
                 : 'expr));
# 746 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "IdealParser.fsy"
                                            BinOp (_1, ArithBinOp Div, _3) 
                   )
# 81 "IdealParser.fsy"
                 : 'expr));
# 758 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "IdealParser.fsy"
                                            BinOp (_1, ArithBinOp Mod, _3) 
                   )
# 82 "IdealParser.fsy"
                 : 'expr));
# 770 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "IdealParser.fsy"
                                           BinOp (_1, RelBinOp Eq, _3) 
                   )
# 84 "IdealParser.fsy"
                 : 'expr));
# 782 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "IdealParser.fsy"
                                            BinOp (_1, RelBinOp Neq, _3) 
                   )
# 85 "IdealParser.fsy"
                 : 'expr));
# 794 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "IdealParser.fsy"
                                           BinOp (_1, RelBinOp Lt, _3) 
                   )
# 86 "IdealParser.fsy"
                 : 'expr));
# 806 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "IdealParser.fsy"
                                           BinOp (_1, RelBinOp Gt, _3) 
                   )
# 87 "IdealParser.fsy"
                 : 'expr));
# 818 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "IdealParser.fsy"
                                            BinOp (_1, RelBinOp Leq, _3) 
                   )
# 88 "IdealParser.fsy"
                 : 'expr));
# 830 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "IdealParser.fsy"
                                            BinOp (_1, RelBinOp Geq, _3) 
                   )
# 89 "IdealParser.fsy"
                 : 'expr));
# 842 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "IdealParser.fsy"
                                            BinOp (_1, LogicBinOp And, _3) 
                   )
# 91 "IdealParser.fsy"
                 : 'expr));
# 854 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "IdealParser.fsy"
                                           BinOp (_1, LogicBinOp Or, _3) 
                   )
# 92 "IdealParser.fsy"
                 : 'expr));
# 866 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "IdealParser.fsy"
                                        UnOp (LogicUnOp Not, _2) 
                   )
# 93 "IdealParser.fsy"
                 : 'expr));
# 877 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "IdealParser.fsy"
                                                    UnOp (ArithUnOp Neg, _2) 
                   )
# 95 "IdealParser.fsy"
                 : 'expr));
# 888 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "IdealParser.fsy"
                                     Lit _1 
                   )
# 97 "IdealParser.fsy"
                 : 'expr));
# 899 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lvalue)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "IdealParser.fsy"
                                       LValue _1 
                   )
# 98 "IdealParser.fsy"
                 : 'expr));
# 910 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "IdealParser.fsy"
                                           _2 
                   )
# 99 "IdealParser.fsy"
                 : 'expr));
# 921 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "IdealParser.fsy"
                                 Id _1 
                   )
# 102 "IdealParser.fsy"
                 : 'lvalue));
# 932 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lvalue)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "IdealParser.fsy"
                                                    Subscript (_1, _3) 
                   )
# 103 "IdealParser.fsy"
                 : 'lvalue));
# 944 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lvalue)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "IdealParser.fsy"
                                            Select (_1, _3) 
                   )
# 104 "IdealParser.fsy"
                 : 'lvalue));
# 956 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "IdealParser.fsy"
                                  ByVal _1 
                   )
# 107 "IdealParser.fsy"
                 : 'actual));
# 967 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "IdealParser.fsy"
                                        ByVal _2 
                   )
# 108 "IdealParser.fsy"
                 : 'actual));
# 978 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'lvalue)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "IdealParser.fsy"
                                          ByRef _2 
                   )
# 109 "IdealParser.fsy"
                 : 'actual));
# 989 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'actual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "IdealParser.fsy"
                                    [_1] 
                   )
# 112 "IdealParser.fsy"
                 : 'actuals));
# 1000 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'actual)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "IdealParser.fsy"
                                          [_1] 
                   )
# 113 "IdealParser.fsy"
                 : 'actuals));
# 1012 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'actual)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'actuals)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "IdealParser.fsy"
                                                   _1 :: _3 
                   )
# 114 "IdealParser.fsy"
                 : 'actuals));
# 1025 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'actual)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'actuals)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "IdealParser.fsy"
                                                _1 :: _2 
                   )
# 115 "IdealParser.fsy"
                 : 'actuals));
# 1037 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "IdealParser.fsy"
                                                       (_1, None) 
                   )
# 118 "IdealParser.fsy"
                 : 'paragraph_id));
# 1048 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "IdealParser.fsy"
                                                  (_1, Some _2) 
                   )
# 119 "IdealParser.fsy"
                 : 'paragraph_id));
# 1060 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement')) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "IdealParser.fsy"
                                       locate parseState 1 _1 
                   )
# 122 "IdealParser.fsy"
                 : 'statement));
# 1071 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lvalue)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "IdealParser.fsy"
                                                          Assign (_1, _3) 
                   )
# 125 "IdealParser.fsy"
                 : 'statement'));
# 1083 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "IdealParser.fsy"
                                                                   If (_2, _4, None) 
                   )
# 126 "IdealParser.fsy"
                 : 'statement'));
# 1095 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "IdealParser.fsy"
                                                                      If (_2, _4, Some _6) 
                   )
# 127 "IdealParser.fsy"
                 : 'statement'));
# 1108 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "IdealParser.fsy"
                                                       Call (_1, []) 
                   )
# 128 "IdealParser.fsy"
                 : 'statement'));
# 1119 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'actuals)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "IdealParser.fsy"
                                                             Call (_1, _3) 
                   )
# 129 "IdealParser.fsy"
                 : 'statement'));
# 1131 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "IdealParser.fsy"
                                                                       Goto _2 
                   )
# 130 "IdealParser.fsy"
                 : 'statement'));
# 1142 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "IdealParser.fsy"
                                                                       Return 
                   )
# 131 "IdealParser.fsy"
                 : 'statement'));
# 1152 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "IdealParser.fsy"
                                                                       Block _1 
                   )
# 132 "IdealParser.fsy"
                 : 'statement'));
# 1163 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'paragraph_id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "IdealParser.fsy"
                                                                       Perform _2 
                   )
# 133 "IdealParser.fsy"
                 : 'statement'));
# 1174 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "IdealParser.fsy"
                                                   [_1] 
                   )
# 136 "IdealParser.fsy"
                 : 'statements));
# 1185 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'statements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "IdealParser.fsy"
                                                           _1 :: _3 
                   )
# 137 "IdealParser.fsy"
                 : 'statements));
# 1197 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.id)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'statements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "IdealParser.fsy"
                                                                       (Some _1, _4) 
                   )
# 140 "IdealParser.fsy"
                 : 'block));
# 1209 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'statements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "IdealParser.fsy"
                                                                       (None, _2) 
                   )
# 141 "IdealParser.fsy"
                 : 'block));
# 1220 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "IdealParser.fsy"
                                       (_1, []) 
                   )
# 144 "IdealParser.fsy"
                 : 'body));
# 1231 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'statement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'env_bindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "IdealParser.fsy"
                                                        (_1, _3) 
                   )
# 145 "IdealParser.fsy"
                 : 'body));
# 1243 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "IdealParser.fsy"
                                                   { name = _2; args = []; body = _5 } 
                   )
# 148 "IdealParser.fsy"
                 : 'proc));
# 1255 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'proc_args)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'body)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "IdealParser.fsy"
                                                           { name = _2; args = _4; body = _6 } 
                   )
# 149 "IdealParser.fsy"
                 : 'proc));
# 1268 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'proc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "IdealParser.fsy"
                               [_1] 
                   )
# 152 "IdealParser.fsy"
                 : 'procs));
# 1279 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'proc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'procs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "IdealParser.fsy"
                                       _1 :: _2 
                   )
# 153 "IdealParser.fsy"
                 : 'procs));
# 1291 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'env_binding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "IdealParser.fsy"
                                         [_1] 
                   )
# 156 "IdealParser.fsy"
                 : 'ty_bindings));
# 1302 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'env_binding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "IdealParser.fsy"
                                               [_1] 
                   )
# 157 "IdealParser.fsy"
                 : 'ty_bindings));
# 1314 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'env_binding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'env_bindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "IdealParser.fsy"
                                                        _1 :: _3 
                   )
# 158 "IdealParser.fsy"
                 : 'ty_bindings));
# 1327 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'env_binding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'env_bindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "IdealParser.fsy"
                                                     _1 :: _2 
                   )
# 159 "IdealParser.fsy"
                 : 'ty_bindings));
# 1339 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pic)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "IdealParser.fsy"
                                                            (_1, _3, None) 
                   )
# 162 "IdealParser.fsy"
                 : 'ty_binding));
# 1351 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pic)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'const_value)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "IdealParser.fsy"
                                                            (_1, _3, Some _5) 
                   )
# 163 "IdealParser.fsy"
                 : 'ty_binding));
# 1364 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "IdealParser.fsy"
                                                           Seq [_1] 
                   )
# 166 "IdealParser.fsy"
                 : 'const_value));
# 1375 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'const_value_seq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "IdealParser.fsy"
                                                           Seq _2 
                   )
# 167 "IdealParser.fsy"
                 : 'const_value));
# 1386 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "IdealParser.fsy"
                                                           [_1] 
                   )
# 170 "IdealParser.fsy"
                 : 'const_value_seq));
# 1397 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sep)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "IdealParser.fsy"
                                                           [_1] 
                   )
# 171 "IdealParser.fsy"
                 : 'const_value_seq));
# 1409 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lit)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sep)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'const_value_seq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "IdealParser.fsy"
                                                           _1 :: _3 
                   )
# 172 "IdealParser.fsy"
                 : 'const_value_seq));
# 1422 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_binding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "IdealParser.fsy"
                                                           _1 
                   )
# 175 "IdealParser.fsy"
                 : 'env_binding));
# 1433 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_bindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "IdealParser.fsy"
                                                           _1 
                   )
# 178 "IdealParser.fsy"
                 : 'env_bindings));
# 1444 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_bindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "IdealParser.fsy"
                                                     _1 
                   )
# 181 "IdealParser.fsy"
                 : 'proc_args));
# 1455 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'num)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'num_fmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "IdealParser.fsy"
                                                   let (s, n, d) = _3 in let q = _1 in Ty.Num (s, n, d, q) 
                   )
# 184 "IdealParser.fsy"
                 : 'pic));
# 1467 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'size_fmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "IdealParser.fsy"
                                               Ty.Alpha _2 
                   )
# 185 "IdealParser.fsy"
                 : 'pic));
# 1478 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'size_fmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "IdealParser.fsy"
                                                 Ty.AlphaNum _2 
                   )
# 186 "IdealParser.fsy"
                 : 'pic));
# 1489 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ty_bindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "IdealParser.fsy"
                                                       Ty.Record _2 
                   )
# 187 "IdealParser.fsy"
                 : 'pic));
# 1500 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pic)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'array_fmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "IdealParser.fsy"
                                                   Ty.Array (_1, _3) 
                   )
# 188 "IdealParser.fsy"
                 : 'pic));
# 1512 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "IdealParser.fsy"
                                                               Ty.OnePerByte 
                   )
# 191 "IdealParser.fsy"
                 : 'num));
# 1522 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'num_qual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "IdealParser.fsy"
                                                _3 
                   )
# 192 "IdealParser.fsy"
                 : 'num));
# 1533 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'num_qual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "IdealParser.fsy"
                                          _1 
                   )
# 193 "IdealParser.fsy"
                 : 'num));
# 1544 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "IdealParser.fsy"
                                                            Ty.BCD 
                   )
# 196 "IdealParser.fsy"
                 : 'num_qual));
# 1554 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "IdealParser.fsy"
                                              Ty.OnePerByte 
                   )
# 197 "IdealParser.fsy"
                 : 'num_qual));
# 1564 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "IdealParser.fsy"
                                          Ty.Int 16us 
                   )
# 198 "IdealParser.fsy"
                 : 'num_qual));
# 1574 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "IdealParser.fsy"
                                          Ty.Int 3us 
                   )
# 199 "IdealParser.fsy"
                 : 'num_qual));
# 1584 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "IdealParser.fsy"
                                          Ty.Int 64us 
                   )
# 200 "IdealParser.fsy"
                 : 'num_qual));
# 1594 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "IdealParser.fsy"
                                            Ty.Float 32us 
                   )
# 201 "IdealParser.fsy"
                 : 'num_qual));
# 1604 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "IdealParser.fsy"
                                            Ty.Float 64us 
                   )
# 202 "IdealParser.fsy"
                 : 'num_qual));
# 1614 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'plain_num_fmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "IdealParser.fsy"
                                                               let (n, d) = _1 in (false, n, d) 
                   )
# 205 "IdealParser.fsy"
                 : 'num_fmt));
# 1625 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'plain_num_fmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "IdealParser.fsy"
                                                               let (n, d) = _2 in (true, n, d) 
                   )
# 206 "IdealParser.fsy"
                 : 'num_fmt));
# 1636 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.FormatSize.t)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "IdealParser.fsy"
                                                     (true, _1, FormatSize.of_int 0) 
                   )
# 207 "IdealParser.fsy"
                 : 'num_fmt));
# 1647 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.FormatSize.t)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "IdealParser.fsy"
                                                    (true, _1, FormatSize.of_uint64 _3) 
                   )
# 208 "IdealParser.fsy"
                 : 'num_fmt));
# 1659 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "IdealParser.fsy"
                                      (FormatSize.of_uint64 _1, FormatSize.of_int 0) 
                   )
# 211 "IdealParser.fsy"
                 : 'plain_num_fmt));
# 1670 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "IdealParser.fsy"
                                                  (FormatSize.of_uint64 _1, FormatSize.of_uint64 _3) 
                   )
# 212 "IdealParser.fsy"
                 : 'plain_num_fmt));
# 1682 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "IdealParser.fsy"
                                             (FormatSize.of_int 0, FormatSize.of_uint64 _2) 
                   )
# 213 "IdealParser.fsy"
                 : 'plain_num_fmt));
# 1693 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : float)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "IdealParser.fsy"
                                                               numformat_of_ufloat _1 
                   )
# 214 "IdealParser.fsy"
                 : 'plain_num_fmt));
# 1704 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "IdealParser.fsy"
                                               FormatSize.of_uint64 _2 
                   )
# 217 "IdealParser.fsy"
                 : 'size_fmt));
# 1715 "IdealParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "IdealParser.fsy"
                                               ArraySize.of_uint64 _2 
                   )
# 220 "IdealParser.fsy"
                 : 'array_fmt));
|]
# 1727 "IdealParser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 60;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let program lexer lexbuf :  Absyn.Ideal.program  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
